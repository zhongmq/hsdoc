{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 SAP HANA HotSpots \u00b6 SAP HANA HotSpots is an automation tool to capture SAP HANA Database KPIs and present the result in an interactive report so that all stake holders (Support, System Administrator, etc) can understand the status of the SAP HANA system intuitively . SAP HANA HotSpots (i.e the GUI version) is released on Windows as of v1.0 hscmd \u00b6 hscmd (SAP HANA HotSpots CMD) is the command line version of the same tool. To understand how to use it please run hscmd --help hscmd report --help hscmd read --help Info hscmd on Windows is released as of v1.3 hscmd on Linux is released as of v1.9 SAP HANA HotSpots Cloud \u00b6 SAP HANA HotSpots Cloud is available via this link . It can be used to analyze SAP HANA Cloud system hosted on BTP. User Interface \u00b6 Feedback? \u00b6 Author: ZHONG, Mingqian (Tim) (Please contact me via mingqian.zhong@sap.com ) Sponsor: Ramu Vidadala","title":"SAP HANA HotSpots Overview"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#sap-hana-hotspots","text":"SAP HANA HotSpots is an automation tool to capture SAP HANA Database KPIs and present the result in an interactive report so that all stake holders (Support, System Administrator, etc) can understand the status of the SAP HANA system intuitively . SAP HANA HotSpots (i.e the GUI version) is released on Windows as of v1.0","title":"SAP HANA HotSpots"},{"location":"#hscmd","text":"hscmd (SAP HANA HotSpots CMD) is the command line version of the same tool. To understand how to use it please run hscmd --help hscmd report --help hscmd read --help Info hscmd on Windows is released as of v1.3 hscmd on Linux is released as of v1.9","title":"hscmd"},{"location":"#sap-hana-hotspots-cloud","text":"SAP HANA HotSpots Cloud is available via this link . It can be used to analyze SAP HANA Cloud system hosted on BTP.","title":"SAP HANA HotSpots Cloud"},{"location":"#user-interface","text":"","title":"User Interface"},{"location":"#feedback","text":"Author: ZHONG, Mingqian (Tim) (Please contact me via mingqian.zhong@sap.com ) Sponsor: Ramu Vidadala","title":"Feedback?"},{"location":"advancedtopic/","text":"Log File \u00b6 A log file with name hsgui.log or hscmd.log (depending on the version) is generated under the same directory where the tool is located. If error occurs, more information can be seen in the log file. Which authorization is required? \u00b6 The tool basically needs to access HANA monitoring views ( M_* ) and statistics server views ( _SYS_STATISTICS.HOST_* ). Therefore the HANA database user used in the tool need the privilege to access these views. i.e. the user should have the standard catalog role MONITORING granted. Options \u00b6 The option menu will show options for different functions: General Options \u00b6 Choose Output Folder : select the output folder where the generated report is saved. Output Folder Naming Convention : the output folder can have 2 naming conventions: Current Time: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00 , where 2021/01/01 08:00 is the current timestamp when the report is generated. Analysis Time Frame: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00_2021.01.02_08.00 , where 2021/01/01 08:00 - 2021/01/02 08:00 is the analysis time frame. Tip Use 'Analysis Time Frame' as the output folder naming convention is helpful when multiple check is carried out on the same system with different time frames. Save Raw Data : if not checked, no raw data (i.e. *.txt/csv) will be saved during report generation. Include Secondary System (HSR) : As of HANA 2.00.060, history information of secondary site in HSR system is also collected, this checkbox can be used to control if information from secondary site is included in the report or not. Parallel Degree (1-4) : Defines the number of threads used to connect to HANA DB and generate report. The maximum allowed DOP (Degree of Parallel) is 4 so that the tool does not introduce too much workload on the target HANA DB. If SAPGUI connection is used, up to DOP SAPGUI sessions will be created to fetch data. General Report Options \u00b6 Include Parameter Check : if checked, any topic including HANA parameter check will be carried out, otherwise it will be skipped to save time. Top Issue : if checked, the General Report will include a summary section at the beginning to show automatically detected top issues on the HANA database. Complete Summary : if checked, the summary section will show information of one area even if no issue has been detected. Include Static Info : if checked, static information is included in the general report, e.g. largest tables on the system. In the future more static information that does not change often along time line will be included. Include Link to Raw Data : if checked, link to the raw data will be included above each figure. Select Sections : it is possible to choose which section would be included in the generated General Report. Tip When working on a scale-out system with large time frame , the generated HTML report size will be big (e.g. > 100MB). In such case, it is recommended to seperate the report into sections: i.e. generate several reports with same time frame and each report contains only one section (e.g. report 1 with section 'CPU', report 2 with section 'Memory', etc) Minimal Thread Sample Number : for very busy system the number of thread sample can be very large, in such case set the minimal thread sample number would be helpful to limit the size of the data collected while still keeping the most important parts. The default value is \"2\". Tip This option can also be used when reading local data to generate a new report. e.g. When the TSH from the raw data is very large, it would be helpful to use a larger value to filter out non-important samples to reduce the size of the generated report. Warning For test systems, however, setting this value too high would return empty result. Comparison Report Options \u00b6 Select Sections : it is possible to choose which section would be included in the generated Comparison Report. SAP Workload Report Options \u00b6 The check box decides if the section is included in the report Number of days determines how many days in the history from now will be included in the report When the tool is closed, the option will be saved as configuration file hs.<version>.yaml and restored automatically next time it starts. Configuration File \u00b6 The selected options will be saved as a configuration file with name hs.<version>.yaml . Below is an example of this configuration file: hs.2.4.yaml General Option : Report Folder : C:/Users/ABC/Downloads/hsreport Report Folder Pattern : AnalysisTime Raw Data : true Include Secondary Host : false Parallel Degree : 4 General Report : Include Parameter Check : false Top Issue : true Complete Summary : false Include Static Info : false Include Link to Raw Data : false Minimal TS Number : 2 Section Selection : Parameter : false CPU : true Memory : false Activity : false SQL : false Thread Sample : false Space : false Disk : false Backup : false Garbage Collection : false Application Lock : false System Replication : false Trace : false Comparison Report : Section Selection : CPU : true Memory : true Activity : true SQL : true Thread Sample : true Space : true Disk : true Application Lock : true System Replication : true SAP Workload Report : ST03 : Day Number : 7 SDFSMON : Day Number : 3 Section Selection : ST03 : true /SDF/SMON : true This configuration file is shared with hscmd . How to reduce report size? \u00b6 If the generated General Report size is too large (> 100MB), the browser can not render it properly and the page might crash after a long loading time. The main reasons for a large report are as following: A scale out system with many hosts: since most of the sections will show information of all the hosts, the report size will be increased by a factor equals to the number of hosts. A very long time frame is chosen: e.g. more than 1 week. All the sections are included in the report. Therefore in order to reduce the report size to less than 100MB, following methods are recommended: First collect all the data using the check box 'Collect Data Only' . This would NOT generate the report but only collect the raw data. Secondly use 'Read Local Data' and select the folder where the raw data is collected in the above step. Afterwards the report can be split in 3 dimensions: Choose a subset of the HANA hosts . Choose a shorter time range . Choose a subset of sections . Above steps can be repeated to generate several reports so that each has a reasonable size.","title":"Advanced Topics"},{"location":"advancedtopic/#log-file","text":"A log file with name hsgui.log or hscmd.log (depending on the version) is generated under the same directory where the tool is located. If error occurs, more information can be seen in the log file.","title":"Log File"},{"location":"advancedtopic/#which-authorization-is-required","text":"The tool basically needs to access HANA monitoring views ( M_* ) and statistics server views ( _SYS_STATISTICS.HOST_* ). Therefore the HANA database user used in the tool need the privilege to access these views. i.e. the user should have the standard catalog role MONITORING granted.","title":"Which authorization is required?"},{"location":"advancedtopic/#options","text":"The option menu will show options for different functions:","title":"Options"},{"location":"advancedtopic/#general-options","text":"Choose Output Folder : select the output folder where the generated report is saved. Output Folder Naming Convention : the output folder can have 2 naming conventions: Current Time: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00 , where 2021/01/01 08:00 is the current timestamp when the report is generated. Analysis Time Frame: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00_2021.01.02_08.00 , where 2021/01/01 08:00 - 2021/01/02 08:00 is the analysis time frame. Tip Use 'Analysis Time Frame' as the output folder naming convention is helpful when multiple check is carried out on the same system with different time frames. Save Raw Data : if not checked, no raw data (i.e. *.txt/csv) will be saved during report generation. Include Secondary System (HSR) : As of HANA 2.00.060, history information of secondary site in HSR system is also collected, this checkbox can be used to control if information from secondary site is included in the report or not. Parallel Degree (1-4) : Defines the number of threads used to connect to HANA DB and generate report. The maximum allowed DOP (Degree of Parallel) is 4 so that the tool does not introduce too much workload on the target HANA DB. If SAPGUI connection is used, up to DOP SAPGUI sessions will be created to fetch data.","title":"General Options"},{"location":"advancedtopic/#general-report-options","text":"Include Parameter Check : if checked, any topic including HANA parameter check will be carried out, otherwise it will be skipped to save time. Top Issue : if checked, the General Report will include a summary section at the beginning to show automatically detected top issues on the HANA database. Complete Summary : if checked, the summary section will show information of one area even if no issue has been detected. Include Static Info : if checked, static information is included in the general report, e.g. largest tables on the system. In the future more static information that does not change often along time line will be included. Include Link to Raw Data : if checked, link to the raw data will be included above each figure. Select Sections : it is possible to choose which section would be included in the generated General Report. Tip When working on a scale-out system with large time frame , the generated HTML report size will be big (e.g. > 100MB). In such case, it is recommended to seperate the report into sections: i.e. generate several reports with same time frame and each report contains only one section (e.g. report 1 with section 'CPU', report 2 with section 'Memory', etc) Minimal Thread Sample Number : for very busy system the number of thread sample can be very large, in such case set the minimal thread sample number would be helpful to limit the size of the data collected while still keeping the most important parts. The default value is \"2\". Tip This option can also be used when reading local data to generate a new report. e.g. When the TSH from the raw data is very large, it would be helpful to use a larger value to filter out non-important samples to reduce the size of the generated report. Warning For test systems, however, setting this value too high would return empty result.","title":"General Report Options"},{"location":"advancedtopic/#comparison-report-options","text":"Select Sections : it is possible to choose which section would be included in the generated Comparison Report.","title":"Comparison Report Options"},{"location":"advancedtopic/#sap-workload-report-options","text":"The check box decides if the section is included in the report Number of days determines how many days in the history from now will be included in the report When the tool is closed, the option will be saved as configuration file hs.<version>.yaml and restored automatically next time it starts.","title":"SAP Workload Report Options"},{"location":"advancedtopic/#configuration-file","text":"The selected options will be saved as a configuration file with name hs.<version>.yaml . Below is an example of this configuration file: hs.2.4.yaml General Option : Report Folder : C:/Users/ABC/Downloads/hsreport Report Folder Pattern : AnalysisTime Raw Data : true Include Secondary Host : false Parallel Degree : 4 General Report : Include Parameter Check : false Top Issue : true Complete Summary : false Include Static Info : false Include Link to Raw Data : false Minimal TS Number : 2 Section Selection : Parameter : false CPU : true Memory : false Activity : false SQL : false Thread Sample : false Space : false Disk : false Backup : false Garbage Collection : false Application Lock : false System Replication : false Trace : false Comparison Report : Section Selection : CPU : true Memory : true Activity : true SQL : true Thread Sample : true Space : true Disk : true Application Lock : true System Replication : true SAP Workload Report : ST03 : Day Number : 7 SDFSMON : Day Number : 3 Section Selection : ST03 : true /SDF/SMON : true This configuration file is shared with hscmd .","title":"Configuration File"},{"location":"advancedtopic/#how-to-reduce-report-size","text":"If the generated General Report size is too large (> 100MB), the browser can not render it properly and the page might crash after a long loading time. The main reasons for a large report are as following: A scale out system with many hosts: since most of the sections will show information of all the hosts, the report size will be increased by a factor equals to the number of hosts. A very long time frame is chosen: e.g. more than 1 week. All the sections are included in the report. Therefore in order to reduce the report size to less than 100MB, following methods are recommended: First collect all the data using the check box 'Collect Data Only' . This would NOT generate the report but only collect the raw data. Secondly use 'Read Local Data' and select the folder where the raw data is collected in the above step. Afterwards the report can be split in 3 dimensions: Choose a subset of the HANA hosts . Choose a shorter time range . Choose a subset of sections . Above steps can be repeated to generate several reports so that each has a reasonable size.","title":"How to reduce report size?"},{"location":"changelog/","text":"2023/01/09: V2.4 \u00b6 + Parallel Degree added to General Options , multiple threads are triggered to fetch data from HANA DB and generate report to improve performance # Color Palette redesigned to visualize the information better # Clipboard is no longer used when fetching data via SAPGUI , instead the data is saved under %TEMP% directory, therefore there will be no conflict to clipboard operations when SAPGUI is used + If the generated report is too large (> 100MB), warning is shown and a document link is provided + If the selected analysis time range is too small (< 4 hour), warning is shown and a document link is provided # [General Report] 'Summary' -> 'Top SQL' also shows application source of the SQL if available + Window title shows DBID when connected to the database + [General Report] 'TSH' -> 'Unusual Thread Method / SQL' and 'Unusual Lock Name / SQL' added to show top unusual thread method/lock name and which SQLs are responsible # [General Report] 'Lock' -> 'Top Waiting SQL HASH' and 'Top Waiting Table' are combined into 'Top Waiting Table / SQL' with two levels of aggregation + [General Report] 'Lock' -> 'Top Lock Holder SQL / Waiting SQL (Table)' added to show the top lock holder SQL and which SQL suffers most from it # [General Report] 'Lock' -> 'Top Lock Holder Application Source / Waiting SQL (Table)' added to show the top lock holder application source and which SQL suffers most from it + General Report Option -> Minimal Thread Sample Number also applies when reading local data # [General report] -> Space -> table row limit considers history instead of the current value # 'account.sap.com' is chosen automatically to logon SAP HANA HotSpots Cloud + hscmd : option -p added to support multiple threads # hscmd : sub command hsic is renamed to read + hscmd : option --latestdir / -ld added to quickly select the input path - bug fix: when the history data contains host name that is not available in the current configuration, the report terminates - bug fix: overview report terminates when no HANA indexserver down happens - bug fix: HANA Info is not correct on some revisions - bug fix: if statement_concurrency_limit = 0, section cpu -> thread workload fails - bug fix: Application lock holder statement hash is not shown under some situations - bug fix: If SQL text contains HTML tags, the whole report will be messed up 2022/09/28: V2.3 \u00b6 [Overview Report] added to quickly show the KPI history + 'Folder Prefix' can be used to prefix the output folder + 'Collect Data Only' added to only collect data without generating report + 'Host Selection' button added to filter HANA hosts on scale-out systems + Read Local Data added as data source together with the previous database connections to read offline data including HSIC data # 'Read HSIC Data' is moved from the function lists to the data source selection . + General Option -> 'Include Secondary System (HSR)' added to control if information from HSR secondary system is shown in the report + General Report Option -> 'Minimal Thread Sample Number' added to control the minimal thread sample number used when collecting TSH data # [General Report]: In the following sections, data are shown with two levels of aggregation: 'TSH' -> 'SQL and Thread Method' is changed to 'SQL and Thread Type / Method' and grouped by SQL first and then grouped by the combination of 'Thread Type' and 'Thread Method', in such a way it is now more clear to see what is the dominant SQL and what is the dominant 'Thread Type / Method' for each SQL 'TSH' -> 'SQL and Thread State' and 'SQL and Lock Name' are combined into 'SQL and Thread State / Lock Name' and grouped by SQL first and then grouped by the combination of 'Thread State' and 'Lock Name' 'CPU' -> 'Application Source with Most Running Thread' reworked to be grouped by the application source first and then the SQL Hash 'Lock' -> 'Top Waiting SQL (Table) - *' reworked to be grouped by the top waiting SQL and table first and then the lock holder status/SQL/application source # Configuration file is changed to 'yaml' format + Host Number information is added to the GUI when the target system is a scale out system - bug fix: CPU_ALL is now shown instead of CPU_USER in many figure - bug fix: [General Report] 'SQL' -> 'SQL Cache Overview': Number of eviction per hour is showing with wrong y-axis 2022/06/20: V2.2 \u00b6 + [SAP Workload Report] added to show SAP workload KPI history, it only works with SAPGUI connection. It also supports non-HANA DB systems + [Read HSIC Data] added to read SAP HANA HotSpots Information Collector (HSIC) data. It is also possible to read offline raw data to generate a new report # Menu Option is reworked, now that all options are put into one window # [General Report] 'CPU' -> 'CPU with Most Running Thread' and 'SQL with Most Thread Sample' reworked so that it is possible to show only threads with SQL HASH # [General Report] 'TSH' -> 'Thread State and Lock Name' reworked so that it is possible to show only threads with unusual lock name # [General Report] 'TSH' -> 'Thread Type and Thread Method' reworked so that it is possible to show only threads with unusual thread method # [General Report] 'TSH' -> 'SQL and *' reworked so that it is possible to show only threads with SQL HASH # [General Report] 'App Lock' -> 'Waiting SQL / Waiting Table / Lock Holder SQL' shows the lock holder SQL text instead of the waiting SQL text when hovering the mouse + Analysis progress (%) is shown in the window title + Report run time and size are shown in the user interface and the log files + The analysis can be terminated if click on the 'Disconnect' button - Topic [Minicheck] is removed because it does not make much sense to just execute some scripts via the SAP HANA HotSpots tool. - bug fix: GAL is not correctly calculated if license memory is smaller than physical memory 2021/12/23: V2.1 \u00b6 + [Comparison Report] added to show difference of HANA KPI between 2 time frames + Splash window added # [General Report] The summary is reworked: Top SQL statements are listed separately + [General Report] 'CPU' -> 'CPU vs. Threads' shows also the \"CPU All\" KPI which is the sum of user CPU and system CPU + [General Report] 'Space' -> 'Column Table with Most Read/Write Count' is added to show top column tables with most read and write operations + [General Report] 'Thread Sample' -> 'SQL and Passport Action' is added to show passport action information - bug fix: GAL is not correctly calculated on MDC system with more than 1 tenants - bug fix: \"Table with Largest Disk Size\" -> disk size is wrong for partitioned tables 2021/09/01: V2.0 \u00b6 + HANA Cloud is supported + New report outlook style + 'General Option' is added in the menu 'Option', it is now possible to choose the default output folder of the report and also the folder naming convention can be configured + [General Report] 'Thread Sample' -> 'Callstack History' added to show the history distribution of the dominant 'Callstack' + [General Report] 'System Replication' -> 'Log Shipping Buffer' added to show if log shipping buffer is full for async HSR + [General Report] 'Trace' section is added to show HANA Database traces information + [General Report] 'General' section is added to include 'Host Configuration' and 'HANA Revision History' information + [Single SQL Report] 'Object' section now also include the Calculation View definition in JSON format 2021/03/29: V1.9 \u00b6 + [Single SQL Report] is added to show detailed information of one particular SQL statement # [General Report] 'Thread Sample' is redesigned to limit the '-- Others --' portion so that the output shows more meaningful information # [General Report] 'Thread Sample' -> 'Client IP' is changed to 'Client Host' so that the client host name instead of the client ip is shown + [General Report] 'Space' -> 'Row Table with Most Rows'/'Row Table with Largest Memory Size'/'Row Table with Largest Fragmented Size' are added 2021/03/02: V1.8 \u00b6 + After connect to HANA database, basic HANA configuration such as Scale-out, HSR, Timezone will be displayed + [General Report] 'Space' -> 'Data Page' added to show the history of shadow page size + [General Report] 'CPU' -> 'CPU vs. Threads' now shows the KPI aggregated by AVG and MAX separately + [General Report] Section 'SQL' -> 'SQL with Top Elapsed Time': shows also the key KPI of the SQL statement such as elapsed time per execution, elapsed time per row, etc. + [General Report] Section 'Space' -> 'Log Volume and Merge' added to show which tables are mainly responsible for high merged rows and log volume generated, i.e. high DML executed on these tables + [General Report] In section 'CPU' -> 'Application Source with Most Running Thread': Sunburst figure is added to show the distribution of SQL statements triggered by each application source + [General Report] Pie and sunburst figures are added to figures under 'Memory' section to show the summary of memory consumption + [General Report] Option -> General Report Option -> 'Complete Summary' added. If this option is checked: the summary will contain information of one area even if no issue is detected + [General Report] Option -> General Report Option -> 'Include Link to Raw Data' added. If this option is checked: link to the raw data will be included above each figure + [General Report] In section 'CPU' -> 'Thread Workload', if workload class is configured, the information will be shown - bug fix: R/3 connection not working well when using Belize Theme 2021/01/20: V1.7 \u00b6 # Option menu is completely reworked: - \"R/3 Style Output\" is removed, in the future both csv and R/3 style output are always provided # \"Top Issue\" is officially released , most critical issues will be listed at the beginning of the general report to highlight the HotSpots on the system + \"General Report Option\" -> \"Include Static Info\" added, see manual above for detailed information + \"General Report Option\" -> \"Select Sections\" added, see manual above for detailed information The option will be saved as config file hh.ini so that its status will be remembered + SSL connection supported : checkbox 'SSL' is added in the GUI version and option '-ssl' is added in hscmd # Time selection is reworked, combo box for start and end time are added with 2 extra options: Since start of M_SERVICE_THREAD_SAMPLES: this is to focus on the most recent history, normally within the last 2 hours and the result will show with higher granularity of 10 seconds per sample Since last startup: set the begin time to the most recent HANA startup time + [General Report] Persistent memory is considered in section \"Memory->Top consumer\" and section \"Space->Table with largest memory size\" + [General Report] 'Thread Sample' -> 'SQL Hierarchy' added to show the relationship between SQL HASH and Root HASH, especially when Procedure/AMDP is used, it is helpful to find which SQL is responsible for most of the run time # [General Report] Time duration in various place has been changed from seconds to human friendly format, e.g. 3800 sec is now shown as '1 hour 3 minute 20 second' # [General Report] 'Space' -> 'Table with Most Rows' also shows 1.5 billion / 2 billion threshold # 'GeneralCheck' is renamed to 'General Report'; 'SQLCheck' is renamed to 'Top SQL Report' 2020/11/30: V1.6 \u00b6 + [General Report] Combination of waiting SQL/table/lock holder sql and lock holder status has been added, this can be used to identify locking caused by parallel DML + Mouse cursor will change into hourglass after analysis is started + [General Report] SQL Cache overview history added # Default output has been changed to: .\\Report\\<DBID>_\\<SID>_\\<Topic>_\\<Date>_\\<Time>\\HANAHotSpots_\\<DBID>_\\<SID>_\\<Topic>_\\<StartTime>_\\<EndTime>.html + [General Report] SQL with most running threads and most threads added + [General Report] Thread sample history aggregated by SQL/lock name and SQL/Thread method added + [General Report] Active/Waiting thread number added to thread sample history figures # [General Report] Pie charts are showing the category text instead of the value, the size is increased for better reading + [General Report] 'CPU' -> 'Thread workload' added + [General Report] Host type and role added (i.e. Primary/Secondary for HSR and Master/Slave for scale-out) # [General Report] \"Top issue\" improved: issues are listed according to topic and priority. Top SQLs are also listed if they have big impact to the system. - bug fix: GC blocker history is showing wrong timestamp 2020/10/15: V1.5 \u00b6 # [General Report] The report structure is completely reorganized. Results are now presented according to topics. Such change simplifies future enhancement of extra check results + [General Report] SQL texts are now included in all figures related to SQLs . When hovering the mouse on the graph, SQL text will be shown. Due to the screen size limitation, if the SQL text is too long, only part of it is shown The complete SQL text is saved in file \"SQL Texts.txt\" # [General Report] For memory and table size history, 2 buttons are added so that the figure can be toggled between stacked and non-stacked format. The non-stacked format is better to spot sudden change of the KPI + [General Report] General configuration of CPU, memory, hardware, disk, HSR added + [General Report] CPU NUMA Load history added + [General Report] If wait for lock time is high during save point, the ConsistentChangeLock holder history is shown + [General Report] SQL causing OOM added + [General Report] Memory component history added + [General Report] Thread sample history aggregated by db user, app user and client ip added + [General Report] Table with largest disk size history added + [General Report] Disk size and general information added + [General Report] Backup history added + [General Report] Garbage collection blocker history added # If the tool crashed, the detailed error is logged for troubleshooting - bug fix: various bugs that cause the tool to crash 2020/09/15: V1.4 \u00b6 + SAPGUI connection is supported # HANA server time is taken into account, e.g. when \"last 24 hours\" is chosen for the analysis time frame, the end time will be set to the current timestamp on the HANA server rather than the local timestamp of the laptop where the tool is started + [General Report] Data volume added to I/O KPIs + [General Report] Combination of waiting SQL/table/lock holder application source has been added. SQL text is also shown when hovering the mouse on the figure - bug fix: [Top SQL Report] Top sql is duplicated in scale out system - bug fix: Note link in the generated report replaced from relative link to absolute link 2020/07/18: V1.3 \u00b6 + hscmd (SAP HANA HotSpots CMD) command line version released with V1.3 + hdbuserstore key is supported to connect + SSO is supported to connect + [General Report] Parameter change history + [General Report] Memory service history + [General Report] Commit IO history + [Top SQL Report] plan_id added in the SQL KPI History, so it is easier to see the plan change impact on the SQL performance - bug fix: Crash when application lock history is empty - bug fix: Crash when load history is empty 2020/06/23: V1.2 \u00b6 + Menu \"Option\" + Automatically identify most critical issues and provided in the \"Summary\" section + Topic \"MiniCheck\" + Parameter check + Annotation of good value added to I/O figures 2020/05/15: V1.1 \u00b6 Information regarding top heap area is shown in GeneralCheck Report (info read from Note 1999997) Information regarding top thread state / lock is shown in GeneralCheck Report (info read from Note 1999998) Information regarding top thread type / method is shown in GeneralCheck Report (info read from Note 2114710) 2020/05/12: V1.0 \u00b6 First version released","title":"Change Log"},{"location":"changelog/#20230109-v24","text":"+ Parallel Degree added to General Options , multiple threads are triggered to fetch data from HANA DB and generate report to improve performance # Color Palette redesigned to visualize the information better # Clipboard is no longer used when fetching data via SAPGUI , instead the data is saved under %TEMP% directory, therefore there will be no conflict to clipboard operations when SAPGUI is used + If the generated report is too large (> 100MB), warning is shown and a document link is provided + If the selected analysis time range is too small (< 4 hour), warning is shown and a document link is provided # [General Report] 'Summary' -> 'Top SQL' also shows application source of the SQL if available + Window title shows DBID when connected to the database + [General Report] 'TSH' -> 'Unusual Thread Method / SQL' and 'Unusual Lock Name / SQL' added to show top unusual thread method/lock name and which SQLs are responsible # [General Report] 'Lock' -> 'Top Waiting SQL HASH' and 'Top Waiting Table' are combined into 'Top Waiting Table / SQL' with two levels of aggregation + [General Report] 'Lock' -> 'Top Lock Holder SQL / Waiting SQL (Table)' added to show the top lock holder SQL and which SQL suffers most from it # [General Report] 'Lock' -> 'Top Lock Holder Application Source / Waiting SQL (Table)' added to show the top lock holder application source and which SQL suffers most from it + General Report Option -> Minimal Thread Sample Number also applies when reading local data # [General report] -> Space -> table row limit considers history instead of the current value # 'account.sap.com' is chosen automatically to logon SAP HANA HotSpots Cloud + hscmd : option -p added to support multiple threads # hscmd : sub command hsic is renamed to read + hscmd : option --latestdir / -ld added to quickly select the input path - bug fix: when the history data contains host name that is not available in the current configuration, the report terminates - bug fix: overview report terminates when no HANA indexserver down happens - bug fix: HANA Info is not correct on some revisions - bug fix: if statement_concurrency_limit = 0, section cpu -> thread workload fails - bug fix: Application lock holder statement hash is not shown under some situations - bug fix: If SQL text contains HTML tags, the whole report will be messed up","title":"2023/01/09: V2.4"},{"location":"changelog/#20220928-v23","text":"[Overview Report] added to quickly show the KPI history + 'Folder Prefix' can be used to prefix the output folder + 'Collect Data Only' added to only collect data without generating report + 'Host Selection' button added to filter HANA hosts on scale-out systems + Read Local Data added as data source together with the previous database connections to read offline data including HSIC data # 'Read HSIC Data' is moved from the function lists to the data source selection . + General Option -> 'Include Secondary System (HSR)' added to control if information from HSR secondary system is shown in the report + General Report Option -> 'Minimal Thread Sample Number' added to control the minimal thread sample number used when collecting TSH data # [General Report]: In the following sections, data are shown with two levels of aggregation: 'TSH' -> 'SQL and Thread Method' is changed to 'SQL and Thread Type / Method' and grouped by SQL first and then grouped by the combination of 'Thread Type' and 'Thread Method', in such a way it is now more clear to see what is the dominant SQL and what is the dominant 'Thread Type / Method' for each SQL 'TSH' -> 'SQL and Thread State' and 'SQL and Lock Name' are combined into 'SQL and Thread State / Lock Name' and grouped by SQL first and then grouped by the combination of 'Thread State' and 'Lock Name' 'CPU' -> 'Application Source with Most Running Thread' reworked to be grouped by the application source first and then the SQL Hash 'Lock' -> 'Top Waiting SQL (Table) - *' reworked to be grouped by the top waiting SQL and table first and then the lock holder status/SQL/application source # Configuration file is changed to 'yaml' format + Host Number information is added to the GUI when the target system is a scale out system - bug fix: CPU_ALL is now shown instead of CPU_USER in many figure - bug fix: [General Report] 'SQL' -> 'SQL Cache Overview': Number of eviction per hour is showing with wrong y-axis","title":"2022/09/28: V2.3"},{"location":"changelog/#20220620-v22","text":"+ [SAP Workload Report] added to show SAP workload KPI history, it only works with SAPGUI connection. It also supports non-HANA DB systems + [Read HSIC Data] added to read SAP HANA HotSpots Information Collector (HSIC) data. It is also possible to read offline raw data to generate a new report # Menu Option is reworked, now that all options are put into one window # [General Report] 'CPU' -> 'CPU with Most Running Thread' and 'SQL with Most Thread Sample' reworked so that it is possible to show only threads with SQL HASH # [General Report] 'TSH' -> 'Thread State and Lock Name' reworked so that it is possible to show only threads with unusual lock name # [General Report] 'TSH' -> 'Thread Type and Thread Method' reworked so that it is possible to show only threads with unusual thread method # [General Report] 'TSH' -> 'SQL and *' reworked so that it is possible to show only threads with SQL HASH # [General Report] 'App Lock' -> 'Waiting SQL / Waiting Table / Lock Holder SQL' shows the lock holder SQL text instead of the waiting SQL text when hovering the mouse + Analysis progress (%) is shown in the window title + Report run time and size are shown in the user interface and the log files + The analysis can be terminated if click on the 'Disconnect' button - Topic [Minicheck] is removed because it does not make much sense to just execute some scripts via the SAP HANA HotSpots tool. - bug fix: GAL is not correctly calculated if license memory is smaller than physical memory","title":"2022/06/20: V2.2"},{"location":"changelog/#20211223-v21","text":"+ [Comparison Report] added to show difference of HANA KPI between 2 time frames + Splash window added # [General Report] The summary is reworked: Top SQL statements are listed separately + [General Report] 'CPU' -> 'CPU vs. Threads' shows also the \"CPU All\" KPI which is the sum of user CPU and system CPU + [General Report] 'Space' -> 'Column Table with Most Read/Write Count' is added to show top column tables with most read and write operations + [General Report] 'Thread Sample' -> 'SQL and Passport Action' is added to show passport action information - bug fix: GAL is not correctly calculated on MDC system with more than 1 tenants - bug fix: \"Table with Largest Disk Size\" -> disk size is wrong for partitioned tables","title":"2021/12/23: V2.1"},{"location":"changelog/#20210901-v20","text":"+ HANA Cloud is supported + New report outlook style + 'General Option' is added in the menu 'Option', it is now possible to choose the default output folder of the report and also the folder naming convention can be configured + [General Report] 'Thread Sample' -> 'Callstack History' added to show the history distribution of the dominant 'Callstack' + [General Report] 'System Replication' -> 'Log Shipping Buffer' added to show if log shipping buffer is full for async HSR + [General Report] 'Trace' section is added to show HANA Database traces information + [General Report] 'General' section is added to include 'Host Configuration' and 'HANA Revision History' information + [Single SQL Report] 'Object' section now also include the Calculation View definition in JSON format","title":"2021/09/01: V2.0"},{"location":"changelog/#20210329-v19","text":"+ [Single SQL Report] is added to show detailed information of one particular SQL statement # [General Report] 'Thread Sample' is redesigned to limit the '-- Others --' portion so that the output shows more meaningful information # [General Report] 'Thread Sample' -> 'Client IP' is changed to 'Client Host' so that the client host name instead of the client ip is shown + [General Report] 'Space' -> 'Row Table with Most Rows'/'Row Table with Largest Memory Size'/'Row Table with Largest Fragmented Size' are added","title":"2021/03/29: V1.9"},{"location":"changelog/#20210302-v18","text":"+ After connect to HANA database, basic HANA configuration such as Scale-out, HSR, Timezone will be displayed + [General Report] 'Space' -> 'Data Page' added to show the history of shadow page size + [General Report] 'CPU' -> 'CPU vs. Threads' now shows the KPI aggregated by AVG and MAX separately + [General Report] Section 'SQL' -> 'SQL with Top Elapsed Time': shows also the key KPI of the SQL statement such as elapsed time per execution, elapsed time per row, etc. + [General Report] Section 'Space' -> 'Log Volume and Merge' added to show which tables are mainly responsible for high merged rows and log volume generated, i.e. high DML executed on these tables + [General Report] In section 'CPU' -> 'Application Source with Most Running Thread': Sunburst figure is added to show the distribution of SQL statements triggered by each application source + [General Report] Pie and sunburst figures are added to figures under 'Memory' section to show the summary of memory consumption + [General Report] Option -> General Report Option -> 'Complete Summary' added. If this option is checked: the summary will contain information of one area even if no issue is detected + [General Report] Option -> General Report Option -> 'Include Link to Raw Data' added. If this option is checked: link to the raw data will be included above each figure + [General Report] In section 'CPU' -> 'Thread Workload', if workload class is configured, the information will be shown - bug fix: R/3 connection not working well when using Belize Theme","title":"2021/03/02: V1.8"},{"location":"changelog/#20210120-v17","text":"# Option menu is completely reworked: - \"R/3 Style Output\" is removed, in the future both csv and R/3 style output are always provided # \"Top Issue\" is officially released , most critical issues will be listed at the beginning of the general report to highlight the HotSpots on the system + \"General Report Option\" -> \"Include Static Info\" added, see manual above for detailed information + \"General Report Option\" -> \"Select Sections\" added, see manual above for detailed information The option will be saved as config file hh.ini so that its status will be remembered + SSL connection supported : checkbox 'SSL' is added in the GUI version and option '-ssl' is added in hscmd # Time selection is reworked, combo box for start and end time are added with 2 extra options: Since start of M_SERVICE_THREAD_SAMPLES: this is to focus on the most recent history, normally within the last 2 hours and the result will show with higher granularity of 10 seconds per sample Since last startup: set the begin time to the most recent HANA startup time + [General Report] Persistent memory is considered in section \"Memory->Top consumer\" and section \"Space->Table with largest memory size\" + [General Report] 'Thread Sample' -> 'SQL Hierarchy' added to show the relationship between SQL HASH and Root HASH, especially when Procedure/AMDP is used, it is helpful to find which SQL is responsible for most of the run time # [General Report] Time duration in various place has been changed from seconds to human friendly format, e.g. 3800 sec is now shown as '1 hour 3 minute 20 second' # [General Report] 'Space' -> 'Table with Most Rows' also shows 1.5 billion / 2 billion threshold # 'GeneralCheck' is renamed to 'General Report'; 'SQLCheck' is renamed to 'Top SQL Report'","title":"2021/01/20: V1.7"},{"location":"changelog/#20201130-v16","text":"+ [General Report] Combination of waiting SQL/table/lock holder sql and lock holder status has been added, this can be used to identify locking caused by parallel DML + Mouse cursor will change into hourglass after analysis is started + [General Report] SQL Cache overview history added # Default output has been changed to: .\\Report\\<DBID>_\\<SID>_\\<Topic>_\\<Date>_\\<Time>\\HANAHotSpots_\\<DBID>_\\<SID>_\\<Topic>_\\<StartTime>_\\<EndTime>.html + [General Report] SQL with most running threads and most threads added + [General Report] Thread sample history aggregated by SQL/lock name and SQL/Thread method added + [General Report] Active/Waiting thread number added to thread sample history figures # [General Report] Pie charts are showing the category text instead of the value, the size is increased for better reading + [General Report] 'CPU' -> 'Thread workload' added + [General Report] Host type and role added (i.e. Primary/Secondary for HSR and Master/Slave for scale-out) # [General Report] \"Top issue\" improved: issues are listed according to topic and priority. Top SQLs are also listed if they have big impact to the system. - bug fix: GC blocker history is showing wrong timestamp","title":"2020/11/30: V1.6"},{"location":"changelog/#20201015-v15","text":"# [General Report] The report structure is completely reorganized. Results are now presented according to topics. Such change simplifies future enhancement of extra check results + [General Report] SQL texts are now included in all figures related to SQLs . When hovering the mouse on the graph, SQL text will be shown. Due to the screen size limitation, if the SQL text is too long, only part of it is shown The complete SQL text is saved in file \"SQL Texts.txt\" # [General Report] For memory and table size history, 2 buttons are added so that the figure can be toggled between stacked and non-stacked format. The non-stacked format is better to spot sudden change of the KPI + [General Report] General configuration of CPU, memory, hardware, disk, HSR added + [General Report] CPU NUMA Load history added + [General Report] If wait for lock time is high during save point, the ConsistentChangeLock holder history is shown + [General Report] SQL causing OOM added + [General Report] Memory component history added + [General Report] Thread sample history aggregated by db user, app user and client ip added + [General Report] Table with largest disk size history added + [General Report] Disk size and general information added + [General Report] Backup history added + [General Report] Garbage collection blocker history added # If the tool crashed, the detailed error is logged for troubleshooting - bug fix: various bugs that cause the tool to crash","title":"2020/10/15: V1.5"},{"location":"changelog/#20200915-v14","text":"+ SAPGUI connection is supported # HANA server time is taken into account, e.g. when \"last 24 hours\" is chosen for the analysis time frame, the end time will be set to the current timestamp on the HANA server rather than the local timestamp of the laptop where the tool is started + [General Report] Data volume added to I/O KPIs + [General Report] Combination of waiting SQL/table/lock holder application source has been added. SQL text is also shown when hovering the mouse on the figure - bug fix: [Top SQL Report] Top sql is duplicated in scale out system - bug fix: Note link in the generated report replaced from relative link to absolute link","title":"2020/09/15: V1.4"},{"location":"changelog/#20200718-v13","text":"+ hscmd (SAP HANA HotSpots CMD) command line version released with V1.3 + hdbuserstore key is supported to connect + SSO is supported to connect + [General Report] Parameter change history + [General Report] Memory service history + [General Report] Commit IO history + [Top SQL Report] plan_id added in the SQL KPI History, so it is easier to see the plan change impact on the SQL performance - bug fix: Crash when application lock history is empty - bug fix: Crash when load history is empty","title":"2020/07/18: V1.3"},{"location":"changelog/#20200623-v12","text":"+ Menu \"Option\" + Automatically identify most critical issues and provided in the \"Summary\" section + Topic \"MiniCheck\" + Parameter check + Annotation of good value added to I/O figures","title":"2020/06/23: V1.2"},{"location":"changelog/#20200515-v11","text":"Information regarding top heap area is shown in GeneralCheck Report (info read from Note 1999997) Information regarding top thread state / lock is shown in GeneralCheck Report (info read from Note 1999998) Information regarding top thread type / method is shown in GeneralCheck Report (info read from Note 2114710)","title":"2020/05/15: V1.1"},{"location":"changelog/#20200512-v10","text":"First version released","title":"2020/05/12: V1.0"},{"location":"download/","text":"The latest version can be downloaded via the below link: Click here to download","title":"Download"},{"location":"examples/","text":"SAP HANA HotSpots can generate different types of report for SAP HANA database troubleshooting, check the example reports below: Overview Report Example General Report Example Top SQL Report Example Single SQL Report Example Comparison Report Example SAP Workload Report Example","title":"Examples"},{"location":"howtouse/","text":"The user interface is straightforward including following steps: 1. Choose Data Source \u00b6 The input data can be from a live HANA database or from local disk (e.g offline HSIC data ) There are 4 ways to connect to a HANA database (it is possible to use the key shortcuts to choose the method): 1) Custom System via SAP Proxy \u00b6 Key Shortcut: 1 If SAP HANA Database connection is open from the customer side, it is possible to connect to \"localhost\" after saptcpproxy is started. Please make sure that the port used is matching the saptcpproxy port, the default port is 5000. 2) SAPGUI Connection \u00b6 Key Shortcut: 2 To connect to HANA Database via SAPGUI, following prerequisites should be fulfilled: Transaction ST04 -> Diagnostics -> SQL Editor has been started on an SAP system running on HANA. (Not required as of V2.2) SAP HANA HotSpots always tries to connect to the last valid SAPGUI session. SAPGUI scripting is enabled in the SAPGUI options as below, it is important to uncheck the two \"Notify\" sub-options to suppress the annoying warning message. Following ABAP parameters should be set to the Required Value Parameter Name Default Value Required Value sapgui/user_scripting FALSE TRUE sapgui/user_scripting_disable_recording FALSE FALSE sapgui/user_scripting_force_notification FALSE FALSE sapgui/user_scripting_per_user FALSE FALSE sapgui/user_scripting_set_readonly FALSE FALSE Please check this link for detailed instructions. If the highlighted icon in the SAPGUI status bar is visible, then it means SAPGUI scripting is allowed. Otherwise please ask the customer for the permission to change them. All these parameters can be changed online. The SAP BASIS version should be higher or equal to 7.02 SP16 / 7.30 SP12 / 7.31 SP12 / 7.40 SP07. Due to different issues introduced by SAPGUI themes (e.g. Belize), to be on the safe side please use the SAPGUI 'Classic Theme' for best stability. Warning Please note that when using SAPGUI connection, the tool needs to access clipboard often, therefore please do not make \"copy/paste\" operation in parallel as otherwise the conflict may cause the tool to fail. As of version 2.4, clipboard is not used any more to store data, insteand the %TEMP% folder is used. Therefore there will be no conflict to clipboard operations. Tip SAPGUI connection is only supported on Windows (including GUI and CMD version). Sometimes the SAPGUI connection is not working as the tool can not find the valid SAPGUI session. This can happen due to various reasons: The above mentioned prerequisites are not met -> please correct them accordingly. Connecting through Firefighter ( /VIRSA/VFAT or GRAC_EAM ) -> make sure to close the Firefighter window after the connection to the target system is opened. If issue persists, please test the WTS to see if the SAPGUI connection can be used. 3) Self Defined System \u00b6 Key Shortcut: 3 Define the Host/Port of any HANA system on the network for direct access. 4) Use hdbuserstore Key \u00b6 Key Shortcut: 4 If key is generated and stored via hdbuserstore , it is also possible to connect to HANA system via the key. Furthermore, if SSO check box is flagged, the password can be omitted to connect to HANA system via Single-Sign-On. If SSL check box is flagged, the secure connection will be used to connect to HANA system. (e.g. should be used when connecting to HANA Cloud System) 5) Read Local Data \u00b6 Key Shortcut: 5 Choose a folder or a zip file from local file system as the data source. If customer has provided the SAP HANA KPI Collector data , the report can be generated by this function. On the other hand, raw data collected from previous report can also be used as the data source to create a new report. 2. Select Function \u00b6 Select a Function to use the tool. Following functions are supported: (Click on the title will jump to the detailed introduction) Overview Report \u00b6 Quickly check the HANA DB and show the most important load history. This report is much faster and lighter than the \"General Report\", it is recommended to always first use this report to get an overview before making detailed analysis through the \"General Report\". General Report \u00b6 Focusing on important HANA KPIs such as CPU, Memory, Thread Samples, Main Activities, etc. The analysis output would immediately show the HotSpots (i.e. When and what was the most significant bottleneck) of the HANA Database. At the beginning of the report, a summary section is provided to automatically detect the most critical issues (if any) identified on the HANA database. Top SQL Report \u00b6 Focusing on most expensive SQL statements based on several criteria: Total Elapsed Time , Number of Thread Samples , Average memory consumption , etc. The analysis output would show the overview and detailed information of all these top SQL statements including SQL text, heatmap, KPI history, etc. Single SQL Report \u00b6 Most important information of one SQL statement is shown: KPI history, all objects accessed, etc. Comparison Report \u00b6 Show the difference of most important HANA KPIs between two time frame selected. It is especially helpful to identify why HANA database behaviour suddenly changes. SAP Workload Report \u00b6 Show the KPI on SAP appliation servers. e.g. KPI History from ST03 and /SDF/SMON 3. Select Time Frame \u00b6 The next step is to select the Time Frame of the analysis. The time frame selection is different for different report types: Tip Due to the fact that many HANA history information are collected once per hour, normally it makes no sense to select a very short time frame. A good starting point would be at least 4 hours. Overview / General / Top SQL / Single SQL Report \u00b6 By default, the analysis is focusing on the last 24 hours. Info The HANA server time will be used automatically, therefore do not be surprised if the appearing time is not the same as your local desktop time. Some shortcuts are provided in the interface so that it is easier to select the \"Begin Time\" and \"End Time\" of the analysis. The combo box beside the Begin Time label can be used to choose the baseline of the begin time: End time -> set the Begin Time to be the same as the End Time. Current time -> set the Begin Time to the current HANA server time. Start of M_SERVICE_THREAD_SAMPLES -> set the Begin Time to the beginning of M_SERVICE_THREAD_SAMPLES, when this is selected, the analysis will focus on the recent thread sample history that has a higher granularity. Most recent HANA startup time -> set the Begin Time to the last HANA startup time. The combo box beside the End Time label can be used to choose the baseline of the end time: Begin time -> set the End time to be the same as the Begin Time. Current time -> set the End time to the current HANA server time. \"H0\" button will set the time to be the midnight of that date. i.e. 00:00 \"M0\" button will set the minute to zero. e.g. 12:34 -> 12:00 The \"+\" and \"-\" button together with the '1H'/'6H'/'1D' radio buttons can be used to quickly change the time by a step of 1 hour, 6 hours and 1 day respectively. Comparison Report \u00b6 Both Time Frame 1 and Time Frame 2 need to be filled. If the time length of time frame 1 equals the length of time frame 2, the 'Analysis Time Range' label will be shown in green to imply that it is recommended to analyze with same time length for comparison report . SAP Workload Report \u00b6 Because the retention time is different on each system, therefore the time frame selection is ignored . The tool will use the SAP Workload Report Options to determine which data to collect. Read Local Data \u00b6 When reading from local data, the data source time range will be shown automatically. For example, the data source time range is 2022/06/28 00:00:00 - 2022/06/29 00:00:00 (24 hours) it is then possible to choose 2022/06/28 10:00:00 - 2022/06/28 20:00:00 (10 hours) to generate a new report with shorter time range. 4. Start Analysis \u00b6 After the Function and Timeframe are selected, click the \"Start Analysis\" button to launch the analysis. Depending on the workload of the system and the timeframe length selected, the analysis time may vary between less than one minute to more than 15 minutes. Especially when connecting via SAPGUI, the run time can be even longer. (Please have some patience : ) ) Folder Prefix \u00b6 The created folder name will be prefixed by the text entered in the 'Folder Prefix' line editor. e.g. If the prefix is set to \" Customer_123 \", the report folder name will be \" Customer_123 _DBID_SID_GeneralReport_Time\". Note that only letters, numbers and underscore are allowed for the prefix name. Collect Data Only \u00b6 If checked, only raw data will be collected and no report will be generated. The generated folder will be prefixed by DataOnly . Host Selection \u00b6 When reading local data, if a scale-out system is detected, this button Host Selection will appear. Clicking on the button will open a dialog window with check boxes for all detected host names and roles. Check each individual host to include it in the final report. If not checked, the host related info will be excluded from the report. If \"All Hosts Combined\" is checked, the report will show aggregated data for all hosts but will not show detailed information for each host. Tip Option \"Collect Data Only\" and \"Host Selection\" are useful when dealing with a scale out system with many hosts. In the past such report was too large and sometimes could not be loaded properly by the browser. In such case pleaee first collect all the data and then use \"Read Local Data\" to generate a tailored report with selected sections, selected HANA host(s) and selected time frame. Show Result \u00b6 Finally \"Show Result\" button would open the report in your default browser. The report is a single HTML file located under the working directory with interactive embedded figures to show the HANA Database information. It is possible to zoom in/out and filter different KPIs for better understanding of the system status. Depending on the analysis choice, the report size ranges from a few MB to more than 100 MB. Check here to know how to control the report size. Also note that it takes a while in the browser for the report to be fully rendered.","title":"How to Use the Tool?"},{"location":"howtouse/#1-choose-data-source","text":"The input data can be from a live HANA database or from local disk (e.g offline HSIC data ) There are 4 ways to connect to a HANA database (it is possible to use the key shortcuts to choose the method):","title":"1. Choose Data Source"},{"location":"howtouse/#1-custom-system-via-sap-proxy","text":"Key Shortcut: 1 If SAP HANA Database connection is open from the customer side, it is possible to connect to \"localhost\" after saptcpproxy is started. Please make sure that the port used is matching the saptcpproxy port, the default port is 5000.","title":"1) Custom System via SAP Proxy"},{"location":"howtouse/#2-sapgui-connection","text":"Key Shortcut: 2 To connect to HANA Database via SAPGUI, following prerequisites should be fulfilled: Transaction ST04 -> Diagnostics -> SQL Editor has been started on an SAP system running on HANA. (Not required as of V2.2) SAP HANA HotSpots always tries to connect to the last valid SAPGUI session. SAPGUI scripting is enabled in the SAPGUI options as below, it is important to uncheck the two \"Notify\" sub-options to suppress the annoying warning message. Following ABAP parameters should be set to the Required Value Parameter Name Default Value Required Value sapgui/user_scripting FALSE TRUE sapgui/user_scripting_disable_recording FALSE FALSE sapgui/user_scripting_force_notification FALSE FALSE sapgui/user_scripting_per_user FALSE FALSE sapgui/user_scripting_set_readonly FALSE FALSE Please check this link for detailed instructions. If the highlighted icon in the SAPGUI status bar is visible, then it means SAPGUI scripting is allowed. Otherwise please ask the customer for the permission to change them. All these parameters can be changed online. The SAP BASIS version should be higher or equal to 7.02 SP16 / 7.30 SP12 / 7.31 SP12 / 7.40 SP07. Due to different issues introduced by SAPGUI themes (e.g. Belize), to be on the safe side please use the SAPGUI 'Classic Theme' for best stability. Warning Please note that when using SAPGUI connection, the tool needs to access clipboard often, therefore please do not make \"copy/paste\" operation in parallel as otherwise the conflict may cause the tool to fail. As of version 2.4, clipboard is not used any more to store data, insteand the %TEMP% folder is used. Therefore there will be no conflict to clipboard operations. Tip SAPGUI connection is only supported on Windows (including GUI and CMD version). Sometimes the SAPGUI connection is not working as the tool can not find the valid SAPGUI session. This can happen due to various reasons: The above mentioned prerequisites are not met -> please correct them accordingly. Connecting through Firefighter ( /VIRSA/VFAT or GRAC_EAM ) -> make sure to close the Firefighter window after the connection to the target system is opened. If issue persists, please test the WTS to see if the SAPGUI connection can be used.","title":"2) SAPGUI Connection"},{"location":"howtouse/#3-self-defined-system","text":"Key Shortcut: 3 Define the Host/Port of any HANA system on the network for direct access.","title":"3) Self Defined System"},{"location":"howtouse/#4-use-hdbuserstore-key","text":"Key Shortcut: 4 If key is generated and stored via hdbuserstore , it is also possible to connect to HANA system via the key. Furthermore, if SSO check box is flagged, the password can be omitted to connect to HANA system via Single-Sign-On. If SSL check box is flagged, the secure connection will be used to connect to HANA system. (e.g. should be used when connecting to HANA Cloud System)","title":"4) Use hdbuserstore Key"},{"location":"howtouse/#5-read-local-data","text":"Key Shortcut: 5 Choose a folder or a zip file from local file system as the data source. If customer has provided the SAP HANA KPI Collector data , the report can be generated by this function. On the other hand, raw data collected from previous report can also be used as the data source to create a new report.","title":"5) Read Local Data"},{"location":"howtouse/#2-select-function","text":"Select a Function to use the tool. Following functions are supported: (Click on the title will jump to the detailed introduction)","title":"2. Select Function"},{"location":"howtouse/#overview-report","text":"Quickly check the HANA DB and show the most important load history. This report is much faster and lighter than the \"General Report\", it is recommended to always first use this report to get an overview before making detailed analysis through the \"General Report\".","title":"Overview Report"},{"location":"howtouse/#general-report","text":"Focusing on important HANA KPIs such as CPU, Memory, Thread Samples, Main Activities, etc. The analysis output would immediately show the HotSpots (i.e. When and what was the most significant bottleneck) of the HANA Database. At the beginning of the report, a summary section is provided to automatically detect the most critical issues (if any) identified on the HANA database.","title":"General Report"},{"location":"howtouse/#top-sql-report","text":"Focusing on most expensive SQL statements based on several criteria: Total Elapsed Time , Number of Thread Samples , Average memory consumption , etc. The analysis output would show the overview and detailed information of all these top SQL statements including SQL text, heatmap, KPI history, etc.","title":"Top SQL Report"},{"location":"howtouse/#single-sql-report","text":"Most important information of one SQL statement is shown: KPI history, all objects accessed, etc.","title":"Single SQL Report"},{"location":"howtouse/#comparison-report","text":"Show the difference of most important HANA KPIs between two time frame selected. It is especially helpful to identify why HANA database behaviour suddenly changes.","title":"Comparison Report"},{"location":"howtouse/#sap-workload-report","text":"Show the KPI on SAP appliation servers. e.g. KPI History from ST03 and /SDF/SMON","title":"SAP Workload Report"},{"location":"howtouse/#3-select-time-frame","text":"The next step is to select the Time Frame of the analysis. The time frame selection is different for different report types: Tip Due to the fact that many HANA history information are collected once per hour, normally it makes no sense to select a very short time frame. A good starting point would be at least 4 hours.","title":"3. Select Time Frame"},{"location":"howtouse/#overview-general-top-sql-single-sql-report","text":"By default, the analysis is focusing on the last 24 hours. Info The HANA server time will be used automatically, therefore do not be surprised if the appearing time is not the same as your local desktop time. Some shortcuts are provided in the interface so that it is easier to select the \"Begin Time\" and \"End Time\" of the analysis. The combo box beside the Begin Time label can be used to choose the baseline of the begin time: End time -> set the Begin Time to be the same as the End Time. Current time -> set the Begin Time to the current HANA server time. Start of M_SERVICE_THREAD_SAMPLES -> set the Begin Time to the beginning of M_SERVICE_THREAD_SAMPLES, when this is selected, the analysis will focus on the recent thread sample history that has a higher granularity. Most recent HANA startup time -> set the Begin Time to the last HANA startup time. The combo box beside the End Time label can be used to choose the baseline of the end time: Begin time -> set the End time to be the same as the Begin Time. Current time -> set the End time to the current HANA server time. \"H0\" button will set the time to be the midnight of that date. i.e. 00:00 \"M0\" button will set the minute to zero. e.g. 12:34 -> 12:00 The \"+\" and \"-\" button together with the '1H'/'6H'/'1D' radio buttons can be used to quickly change the time by a step of 1 hour, 6 hours and 1 day respectively.","title":"Overview / General / Top SQL / Single SQL Report"},{"location":"howtouse/#comparison-report_1","text":"Both Time Frame 1 and Time Frame 2 need to be filled. If the time length of time frame 1 equals the length of time frame 2, the 'Analysis Time Range' label will be shown in green to imply that it is recommended to analyze with same time length for comparison report .","title":"Comparison Report"},{"location":"howtouse/#sap-workload-report_1","text":"Because the retention time is different on each system, therefore the time frame selection is ignored . The tool will use the SAP Workload Report Options to determine which data to collect.","title":"SAP Workload Report"},{"location":"howtouse/#read-local-data","text":"When reading from local data, the data source time range will be shown automatically. For example, the data source time range is 2022/06/28 00:00:00 - 2022/06/29 00:00:00 (24 hours) it is then possible to choose 2022/06/28 10:00:00 - 2022/06/28 20:00:00 (10 hours) to generate a new report with shorter time range.","title":"Read Local Data"},{"location":"howtouse/#4-start-analysis","text":"After the Function and Timeframe are selected, click the \"Start Analysis\" button to launch the analysis. Depending on the workload of the system and the timeframe length selected, the analysis time may vary between less than one minute to more than 15 minutes. Especially when connecting via SAPGUI, the run time can be even longer. (Please have some patience : ) )","title":"4. Start Analysis"},{"location":"howtouse/#folder-prefix","text":"The created folder name will be prefixed by the text entered in the 'Folder Prefix' line editor. e.g. If the prefix is set to \" Customer_123 \", the report folder name will be \" Customer_123 _DBID_SID_GeneralReport_Time\". Note that only letters, numbers and underscore are allowed for the prefix name.","title":"Folder Prefix"},{"location":"howtouse/#collect-data-only","text":"If checked, only raw data will be collected and no report will be generated. The generated folder will be prefixed by DataOnly .","title":"Collect Data Only"},{"location":"howtouse/#host-selection","text":"When reading local data, if a scale-out system is detected, this button Host Selection will appear. Clicking on the button will open a dialog window with check boxes for all detected host names and roles. Check each individual host to include it in the final report. If not checked, the host related info will be excluded from the report. If \"All Hosts Combined\" is checked, the report will show aggregated data for all hosts but will not show detailed information for each host. Tip Option \"Collect Data Only\" and \"Host Selection\" are useful when dealing with a scale out system with many hosts. In the past such report was too large and sometimes could not be loaded properly by the browser. In such case pleaee first collect all the data and then use \"Read Local Data\" to generate a tailored report with selected sections, selected HANA host(s) and selected time frame.","title":"Host Selection"},{"location":"howtouse/#show-result","text":"Finally \"Show Result\" button would open the report in your default browser. The report is a single HTML file located under the working directory with interactive embedded figures to show the HANA Database information. It is possible to zoom in/out and filter different KPIs for better understanding of the system status. Depending on the analysis choice, the report size ranges from a few MB to more than 100 MB. Check here to know how to control the report size. Also note that it takes a while in the browser for the report to be fully rendered.","title":"Show Result"},{"location":"hsic/","text":"Introduction \u00b6 SAP HANA HotSpots Information Collector ( HSIC , still under development) is a tool to collect information from an SAP HANA database. The public name is SAP HANA KPI Collector . The raw data can be fed into the SAP HANA HotSpots tool to generate reports. At the same time, if the raw data was already collected during old report generation, it is also possible to let SAP HANA HotSpots generate a new report based on such old raw data. Instruction \u00b6 From the data source combo box, choose '5. Read Local Data', click on the button 'Read Data' and then select: The HSIC file (normally in tar.gz format) or An old report folder that contains raw data It is possible to change the option when generating the new report, e.g. the old report contains all the sections, by changing the 'Selected Sections' from the option menu, it is now convenient to generate a new report with only subset of all the sections. Besides, it is also possible to re-select the time range and hosts when generating a new report. Finally, click the 'Start Analysis' button to generate a new report via the selected raw data. Info Only report folder as of v2.3 is supported because file hsmeta.json is required.","title":"SAP HANA HotSpots Information Collector (HSIC)"},{"location":"hsic/#introduction","text":"SAP HANA HotSpots Information Collector ( HSIC , still under development) is a tool to collect information from an SAP HANA database. The public name is SAP HANA KPI Collector . The raw data can be fed into the SAP HANA HotSpots tool to generate reports. At the same time, if the raw data was already collected during old report generation, it is also possible to let SAP HANA HotSpots generate a new report based on such old raw data.","title":"Introduction"},{"location":"hsic/#instruction","text":"From the data source combo box, choose '5. Read Local Data', click on the button 'Read Data' and then select: The HSIC file (normally in tar.gz format) or An old report folder that contains raw data It is possible to change the option when generating the new report, e.g. the old report contains all the sections, by changing the 'Selected Sections' from the option menu, it is now convenient to generate a new report with only subset of all the sections. Besides, it is also possible to re-select the time range and hosts when generating a new report. Finally, click the 'Start Analysis' button to generate a new report via the selected raw data. Info Only report folder as of v2.3 is supported because file hsmeta.json is required.","title":"Instruction"},{"location":"links/","text":"SAP Note 2927209: FAQ: SAP HANA HotSpots SAP HANA HotSpots JAM Page","title":"Resources"},{"location":"usage/","text":"The usage statistics of SAP HANA HotSpots can be seen in the below link. It shows how many reports have been generated daily and weekly. The data will be updated regularly. Usage Statistics","title":"Usage Statistics"},{"location":"report/report_comparison/","text":"Overview \u00b6 Comparison report (still in Beta mode) shows the KPI history from different timeframe in one figure so that it is easier to identify the KPI difference along timeline. The report consists of following sections and sub-sections: (One sample 'Comparison Report' can be seen here ) CPU \u00b6 CPU vs. Threads: in general all info from time frame 1 is shown in blue and all info from time frame 2 is shown in red Thread Workload SQL with Most Running Thread Overview: The bar with '+' pattern is from time frame 1, the same applies to all the overview figures in the comparison report SQL with Most Running Thread Detail SQL with Most Thread Sample Overview SQL with Most Thread Sample Detail SQL \u00b6 SQL Statements per Second SQL Avg Request Time SQL with Most Elapsed Time Overview SQL with Most Elapsed Time Detail Thread Sample \u00b6 Thread State and Lock Name Overview Thread State and Lock Name Detail Thread Type and Thread Method Overview Thread Type and Thread Method Detail SQL and Lock Name Overview SQL and Lock Name Detail SQL and Thread Method Overview SQL and Thread Method Detail Space \u00b6 Data File and Memory Size Table with Largest Disk Size Overview Table with Largest Disk Size Detail Column Table with Largest Memory Size Overview Column Table with Largest Memory Size Detail Column Table with Most Rows Overview Column Table with Most Rows Detail Column Table with Most Read Count Overview Column Table with Most Read Count Detail Column Table with Most Write Count Overview Column Table with Most Write Count Detail Row Table with Largest Memory Size Overview Row Table with Largest Memory Size Detail Row Table with Most Rows Overview Row Table with Most Rows Detail Disk \u00b6 DATA Volume Read DATA Volume Write LOG Volume Write Commit Latency and Frequency Commit Latency and Volume Application Lock \u00b6 Transactions and Blocked Transactions Waiting SQL and Table Overview Waiting SQL and Table Detail Lock Holder Application Source Overview Lock Holder Application Source Detail","title":"Comparison Report"},{"location":"report/report_comparison/#overview","text":"Comparison report (still in Beta mode) shows the KPI history from different timeframe in one figure so that it is easier to identify the KPI difference along timeline. The report consists of following sections and sub-sections: (One sample 'Comparison Report' can be seen here )","title":"Overview"},{"location":"report/report_comparison/#cpu","text":"CPU vs. Threads: in general all info from time frame 1 is shown in blue and all info from time frame 2 is shown in red Thread Workload SQL with Most Running Thread Overview: The bar with '+' pattern is from time frame 1, the same applies to all the overview figures in the comparison report SQL with Most Running Thread Detail SQL with Most Thread Sample Overview SQL with Most Thread Sample Detail","title":"CPU"},{"location":"report/report_comparison/#sql","text":"SQL Statements per Second SQL Avg Request Time SQL with Most Elapsed Time Overview SQL with Most Elapsed Time Detail","title":"SQL"},{"location":"report/report_comparison/#thread-sample","text":"Thread State and Lock Name Overview Thread State and Lock Name Detail Thread Type and Thread Method Overview Thread Type and Thread Method Detail SQL and Lock Name Overview SQL and Lock Name Detail SQL and Thread Method Overview SQL and Thread Method Detail","title":"Thread Sample"},{"location":"report/report_comparison/#space","text":"Data File and Memory Size Table with Largest Disk Size Overview Table with Largest Disk Size Detail Column Table with Largest Memory Size Overview Column Table with Largest Memory Size Detail Column Table with Most Rows Overview Column Table with Most Rows Detail Column Table with Most Read Count Overview Column Table with Most Read Count Detail Column Table with Most Write Count Overview Column Table with Most Write Count Detail Row Table with Largest Memory Size Overview Row Table with Largest Memory Size Detail Row Table with Most Rows Overview Row Table with Most Rows Detail","title":"Space"},{"location":"report/report_comparison/#disk","text":"DATA Volume Read DATA Volume Write LOG Volume Write Commit Latency and Frequency Commit Latency and Volume","title":"Disk"},{"location":"report/report_comparison/#application-lock","text":"Transactions and Blocked Transactions Waiting SQL and Table Overview Waiting SQL and Table Detail Lock Holder Application Source Overview Lock Holder Application Source Detail","title":"Application Lock"},{"location":"report/report_general/","text":"Overview \u00b6 General report is designed to show detailed KPI history of HANA Database from different angles and detect potential issues. Color in the General Report \u00b6 Different colors are used in the General Report to visualize the data in a better way: Color of SQL Statements \u00b6 SQL statement in the general report with same STATEMENT HASH gets a same color in all the figures. This helps to identify the SQL statement across the whole report with ease. Color of Typical Thread State and Lock Name \u00b6 Following are example colors used to show typical thread state and lock name combination: Running / ? -> CPU (Blue) Semaphore Wait / TransactionLockWaitSmpStat -> Application Lock (Yellow) Semaphore Wait / hex_WorkerJob_Sleep_Sem -> SQL Execution (Purple) IO Wait / ? -> IO (Green) Network Poll / ? -> Network (Orange) The report consists of following sections and sub-sections: (One sample 'General Report' can be seen here ) Summary \u00b6 Top Issues: most critical issues identified are shown in a table. The columns of the summary tables have the following meaning Area: area of the issue Priority: Very High / High / Medium / Info Description: describe the issue, if option \"Complete Summary\" is checked, then 'No issues Detected' will be shown here Host: on which host the issue occurs Time: the critical timestamp when the issue occurs Section: link to the section Top SQL: shows top SQL statements with different criteria, hovering over the SQL Hash will show SQL text that can be copied to the clipboard Most Running Thread: shows the top 5 SQL with most threads in status 'Running', i.e. consuming CPU Most Thread Sample: shows the top 5 SQL with most thread samples Most Avg Memory Allocation: shows the top 5 SQL with most average memory allocation based on sql plan cache history Expensive SQL with Most Used Memory: shows the top 5 SQL with most used memory based on expensive SQL trace Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on sql plan cache history Expensive SQL with Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on expensive SQL trace General \u00b6 Host Configuration: shows the host type, host role, hardware model, etc HANA Revision History: shows the complete history of HANA revisions Parameter \u00b6 Check Result: if option \"Include Parameter Check\" is checked, the HANA parameter check result is shown. Change History: parameter change history is shown (available as of HANA 2.00.030) Info HANA parameter check is not yet available for HANA Cloud CPU \u00b6 CPU Configuration: CPU type, Number of CPU, etc are shown Detailed NUMA info is shown as of HANA 2.00.010 CPU and Threads: CPU and thread load aggregated by MAX and AVG are shown Info The time interval depends on the time range selected: Time range >= 6 hours: interval = 10 mins Time range < 6 hour: interval = 2 mins Thread Workload: Workload related parameters are shown. If workload class are defined, they will be shown. In the graph, 'session number' stands for the number of sessions connected to HANA, i.e. number of active work processes on SAP Application Servers SQL with Most Running Thread: SQL hash and text with thread state = 'Running' are shown. Click the button 'Only SQL' will show threads only with SQL statement hash available Info The data filter based on thread sample history depends on the time range selected, the below rule apply to all figures involving thread sample history: Time range <= 6 hours: interval = 2 mins; Others percent = 0: i.e. all thread sample will be shown 6 hours < Time range <= 2 days: interval = 10 mins; Others percent = 0.5: i.e. all threads that contribute to less than 0.5 percent in each time interval will be aggregated together into category '-- Others --' as shown in the figure Time range > 2 days: interval = 1 hour; Other percent = 1, similarly, individual portion less than 1 percent will be aggregated into category '-- Others -- ' SQL with Most Thread Sample: SQL hash and text with all threads, sometimes even if the thread state is not 'Running', there is still a chance that this thread is busy with CPU. Click the button 'Only SQL' will show threads only with SQL statement hash available Application Source with Most Running Thread: Click in the center of the 'Sunburst' figure would focus only on that application source and show the distribution of SQL related to this source. The button 'Pie with only App' shows only meaningful application source NUMA Load: shows the distribution of thread samples related to each NUMA load Memory \u00b6 Memory Configuration: memory configuration Memory and Unloads: memory consumption from HOST_RESOURCE_UTILIZATION_STATISTICS and HOST_LOAD_HISTORY_SERVICE Top Consumer by Component: memory consumption from HOST_SERVICE_COMPONENT_MEMORY Top Consumer by Area / Subarea / Objects: memory consumption from script HANA_Memory_TopConsumers , aggregated by different granularity Top Consumer of Heap Area: top consumer of Heap Areas, information from SAP Note 1999997 is shown below the figure to show detailed information of the top heap areas Service Memory: memory consumption from HOST_SERVICE_MEMORY Expensive SQL with Top Used Memory: SQL with most memory consumption from expensive SQL trace are shown. SQL with Top Avg Memory Allocation: SQL with most allocated memory from SQL plan cache is shown, note that these figures are the allocated memory, not the peak memory foot print. Use it as reference only and it is not reliable to decide SQL with most memory consumption in this figure Activity \u00b6 Important Activities: activities that last longer than 1 minute are shown: Indexserver down / Backup / Merge / Consistency Check / Savepoint Tables with High Merge Time: all table/partitions with merge running time longer than 1 minute are shown Savepoint Duration and Throughput: Savepoints that last longer than 1 minute are shown ConsistentChangeLock Holder - SQL Hash: if block time of any savepoint is longer than 10 sec, than the SQL that is holding the CCL is shown ConsistentChangeLock Holder - Thread State and Lock Name: similarly, if the lock holder of CCL is waiting for another lock, such lock information is shown SQL \u00b6 Sessions and SQL Executed per Second SQL Workload SQL Cache Overview: if the SQL cache is undersized, the figure will show the issue SQL Avg Request Time SQL with Top Elapsed Time: SQL with most total elapsed time is shown, the mouse hover information will also show the elapsed time per execution, elapsed time per row, etc. Expensive SQL with Top Elapsed Time: since the retention time of Expensive SQL trace depends on the system workload, it is normal that majority part of the history information is empty TSH (Thread Sample History) \u00b6 Thread State and Lock Name: information from SAP Note 1999998 is shown below the figure to show detailed information. Click the button 'Only Unusual Lock' will show threads only with unusual lock name Thread Type and Thread Method: information from SAP Note 2114710 is shown below the figure to show detailed information. Click the button 'Only Unusual Method' will show threads only with unusual thread method SQL and Thread State / Lock Name: top SQL and its thread state / lock name is shown. The output is aggregated first by SQL HASH and then by the combination of thread state and lock name. The goal is to show the distribution of thread state / lock name among top SQL statements Unusual Lock Name / SQL: top unusual lock name and which SQLs are responsible. SQL and Thread Type / Method: top SQL and its thread type / method is shown. The output is aggregated first by SQL HASH and then by the combination of thread type and thread method. The goal is to show the distribution of thread type / method among top SQL statements Unusual Thread Method / SQL: top unusual thread method and which SQLs are responsible. SQL and Application Name: top SQL and its application name is shown. Sometimes the info is not reliable to identify the application location SQL and Passport Action: top SQL and the passport action is shown. Normally passport action shows meaningful application context of the SQL SQL Hierarchy: the figure shows the SQL Hierarchy where SQL HASH is different from the Root HASH. Such graph will show e.g. which individual SQL triggered by a procedure call is dominant. DB User Application User Client Host Callstack History: shows the historical distribution of dominant call stacks (maximum depth = 17) Space \u00b6 Volume, Backup and Memory Size Log Volume and Merge: the figure shows the hourly generated log size in comparison with the tables with most merged rows, these top tables are in general responsible for most of the log volumes Table with Largest Disk Size: the history information is recorded every 6 hours, so it is normal if the result is empty when the analysis time range is less than 6 hours. Both column table and row table are considered Column Table with Largest Memory Size: the result is aggregated by table Column Table with Most Rows: the result is aggregated by partition Column Table with Most Read Count Column Table with Most Write Count Row Table with Largest Memory Size Row Table with Largest Fragmented Size Row Table with Most Rows Disk \u00b6 Disk Configuration: host, usage type, path, file system type, total size and used size are shown Disk Size: the history usage of disk size is sampled once per day IO Load History: the busy percentage of I/O operations are shown DATA Volume Read DATA Volume Write LOG Volume Write Commit Frequency and Latency Backup \u00b6 Data Backup History: the backup status can be seen with mouse hover Log Backup History GC (Garbage Collection) \u00b6 Versions and Commit Range Garbage Collection Blocker History: the information shown is only for reference and might not be reliable Lock (Application Lock) \u00b6 Transactions and Blocked Transactions Top Waiting Table / SQL: tables/SQLs that suffer most from application lock time are shown Top Waiting SQL (Table) / Lock Holder SQL: shows the lock holder activity that blocks the waiting SQL/Table, if the lock holder is 'IDLE', it means the lock holder is busy on the client side, i.e. hold the lock on the waiting table without commit fast enough. If the lock holder is busy on HANA, its active SQL Hash is shown Top Waiting SQL (Table) / Lock Holder Application Source: shows the top waiting SQL hash (table) and which lock holder application sources block it Top Lock Holder SQL / Waiting SQL (Table): shows the top lock holder SQL and its most blocked SQL hash (table) Top Lock Holder Application Source / Waiting SQL (Table): shows the top application source and its most blocked SQL hash (table) HSR (HANA System Replication) \u00b6 HSR Configuration: shows the HANA System Replication configuration Log Shipping Throughput and Latency Log Shipping Delay and Backlog Log Replay Delay and Backlog Log Shipping Buffer Trace \u00b6 Trace Configuration: shows trace settings that are explicitly activated or modified Trace Overview: shows the most important HANA Database traces generated within the analysis time frame Trace Content: shows the summary (in Pie and Sunburst format) and the detailed distribution of 'Component -> Source File -> Error Pattern' in HANA Database Traces","title":"General Report"},{"location":"report/report_general/#overview","text":"General report is designed to show detailed KPI history of HANA Database from different angles and detect potential issues.","title":"Overview"},{"location":"report/report_general/#color-in-the-general-report","text":"Different colors are used in the General Report to visualize the data in a better way:","title":"Color in the General Report"},{"location":"report/report_general/#color-of-sql-statements","text":"SQL statement in the general report with same STATEMENT HASH gets a same color in all the figures. This helps to identify the SQL statement across the whole report with ease.","title":"Color of SQL Statements"},{"location":"report/report_general/#color-of-typical-thread-state-and-lock-name","text":"Following are example colors used to show typical thread state and lock name combination: Running / ? -> CPU (Blue) Semaphore Wait / TransactionLockWaitSmpStat -> Application Lock (Yellow) Semaphore Wait / hex_WorkerJob_Sleep_Sem -> SQL Execution (Purple) IO Wait / ? -> IO (Green) Network Poll / ? -> Network (Orange) The report consists of following sections and sub-sections: (One sample 'General Report' can be seen here )","title":"Color of Typical Thread State and Lock Name"},{"location":"report/report_general/#summary","text":"Top Issues: most critical issues identified are shown in a table. The columns of the summary tables have the following meaning Area: area of the issue Priority: Very High / High / Medium / Info Description: describe the issue, if option \"Complete Summary\" is checked, then 'No issues Detected' will be shown here Host: on which host the issue occurs Time: the critical timestamp when the issue occurs Section: link to the section Top SQL: shows top SQL statements with different criteria, hovering over the SQL Hash will show SQL text that can be copied to the clipboard Most Running Thread: shows the top 5 SQL with most threads in status 'Running', i.e. consuming CPU Most Thread Sample: shows the top 5 SQL with most thread samples Most Avg Memory Allocation: shows the top 5 SQL with most average memory allocation based on sql plan cache history Expensive SQL with Most Used Memory: shows the top 5 SQL with most used memory based on expensive SQL trace Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on sql plan cache history Expensive SQL with Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on expensive SQL trace","title":"Summary"},{"location":"report/report_general/#general","text":"Host Configuration: shows the host type, host role, hardware model, etc HANA Revision History: shows the complete history of HANA revisions","title":"General"},{"location":"report/report_general/#parameter","text":"Check Result: if option \"Include Parameter Check\" is checked, the HANA parameter check result is shown. Change History: parameter change history is shown (available as of HANA 2.00.030) Info HANA parameter check is not yet available for HANA Cloud","title":"Parameter"},{"location":"report/report_general/#cpu","text":"CPU Configuration: CPU type, Number of CPU, etc are shown Detailed NUMA info is shown as of HANA 2.00.010 CPU and Threads: CPU and thread load aggregated by MAX and AVG are shown Info The time interval depends on the time range selected: Time range >= 6 hours: interval = 10 mins Time range < 6 hour: interval = 2 mins Thread Workload: Workload related parameters are shown. If workload class are defined, they will be shown. In the graph, 'session number' stands for the number of sessions connected to HANA, i.e. number of active work processes on SAP Application Servers SQL with Most Running Thread: SQL hash and text with thread state = 'Running' are shown. Click the button 'Only SQL' will show threads only with SQL statement hash available Info The data filter based on thread sample history depends on the time range selected, the below rule apply to all figures involving thread sample history: Time range <= 6 hours: interval = 2 mins; Others percent = 0: i.e. all thread sample will be shown 6 hours < Time range <= 2 days: interval = 10 mins; Others percent = 0.5: i.e. all threads that contribute to less than 0.5 percent in each time interval will be aggregated together into category '-- Others --' as shown in the figure Time range > 2 days: interval = 1 hour; Other percent = 1, similarly, individual portion less than 1 percent will be aggregated into category '-- Others -- ' SQL with Most Thread Sample: SQL hash and text with all threads, sometimes even if the thread state is not 'Running', there is still a chance that this thread is busy with CPU. Click the button 'Only SQL' will show threads only with SQL statement hash available Application Source with Most Running Thread: Click in the center of the 'Sunburst' figure would focus only on that application source and show the distribution of SQL related to this source. The button 'Pie with only App' shows only meaningful application source NUMA Load: shows the distribution of thread samples related to each NUMA load","title":"CPU"},{"location":"report/report_general/#memory","text":"Memory Configuration: memory configuration Memory and Unloads: memory consumption from HOST_RESOURCE_UTILIZATION_STATISTICS and HOST_LOAD_HISTORY_SERVICE Top Consumer by Component: memory consumption from HOST_SERVICE_COMPONENT_MEMORY Top Consumer by Area / Subarea / Objects: memory consumption from script HANA_Memory_TopConsumers , aggregated by different granularity Top Consumer of Heap Area: top consumer of Heap Areas, information from SAP Note 1999997 is shown below the figure to show detailed information of the top heap areas Service Memory: memory consumption from HOST_SERVICE_MEMORY Expensive SQL with Top Used Memory: SQL with most memory consumption from expensive SQL trace are shown. SQL with Top Avg Memory Allocation: SQL with most allocated memory from SQL plan cache is shown, note that these figures are the allocated memory, not the peak memory foot print. Use it as reference only and it is not reliable to decide SQL with most memory consumption in this figure","title":"Memory"},{"location":"report/report_general/#activity","text":"Important Activities: activities that last longer than 1 minute are shown: Indexserver down / Backup / Merge / Consistency Check / Savepoint Tables with High Merge Time: all table/partitions with merge running time longer than 1 minute are shown Savepoint Duration and Throughput: Savepoints that last longer than 1 minute are shown ConsistentChangeLock Holder - SQL Hash: if block time of any savepoint is longer than 10 sec, than the SQL that is holding the CCL is shown ConsistentChangeLock Holder - Thread State and Lock Name: similarly, if the lock holder of CCL is waiting for another lock, such lock information is shown","title":"Activity"},{"location":"report/report_general/#sql","text":"Sessions and SQL Executed per Second SQL Workload SQL Cache Overview: if the SQL cache is undersized, the figure will show the issue SQL Avg Request Time SQL with Top Elapsed Time: SQL with most total elapsed time is shown, the mouse hover information will also show the elapsed time per execution, elapsed time per row, etc. Expensive SQL with Top Elapsed Time: since the retention time of Expensive SQL trace depends on the system workload, it is normal that majority part of the history information is empty","title":"SQL"},{"location":"report/report_general/#tsh-thread-sample-history","text":"Thread State and Lock Name: information from SAP Note 1999998 is shown below the figure to show detailed information. Click the button 'Only Unusual Lock' will show threads only with unusual lock name Thread Type and Thread Method: information from SAP Note 2114710 is shown below the figure to show detailed information. Click the button 'Only Unusual Method' will show threads only with unusual thread method SQL and Thread State / Lock Name: top SQL and its thread state / lock name is shown. The output is aggregated first by SQL HASH and then by the combination of thread state and lock name. The goal is to show the distribution of thread state / lock name among top SQL statements Unusual Lock Name / SQL: top unusual lock name and which SQLs are responsible. SQL and Thread Type / Method: top SQL and its thread type / method is shown. The output is aggregated first by SQL HASH and then by the combination of thread type and thread method. The goal is to show the distribution of thread type / method among top SQL statements Unusual Thread Method / SQL: top unusual thread method and which SQLs are responsible. SQL and Application Name: top SQL and its application name is shown. Sometimes the info is not reliable to identify the application location SQL and Passport Action: top SQL and the passport action is shown. Normally passport action shows meaningful application context of the SQL SQL Hierarchy: the figure shows the SQL Hierarchy where SQL HASH is different from the Root HASH. Such graph will show e.g. which individual SQL triggered by a procedure call is dominant. DB User Application User Client Host Callstack History: shows the historical distribution of dominant call stacks (maximum depth = 17)","title":"TSH (Thread Sample History)"},{"location":"report/report_general/#space","text":"Volume, Backup and Memory Size Log Volume and Merge: the figure shows the hourly generated log size in comparison with the tables with most merged rows, these top tables are in general responsible for most of the log volumes Table with Largest Disk Size: the history information is recorded every 6 hours, so it is normal if the result is empty when the analysis time range is less than 6 hours. Both column table and row table are considered Column Table with Largest Memory Size: the result is aggregated by table Column Table with Most Rows: the result is aggregated by partition Column Table with Most Read Count Column Table with Most Write Count Row Table with Largest Memory Size Row Table with Largest Fragmented Size Row Table with Most Rows","title":"Space"},{"location":"report/report_general/#disk","text":"Disk Configuration: host, usage type, path, file system type, total size and used size are shown Disk Size: the history usage of disk size is sampled once per day IO Load History: the busy percentage of I/O operations are shown DATA Volume Read DATA Volume Write LOG Volume Write Commit Frequency and Latency","title":"Disk"},{"location":"report/report_general/#backup","text":"Data Backup History: the backup status can be seen with mouse hover Log Backup History","title":"Backup"},{"location":"report/report_general/#gc-garbage-collection","text":"Versions and Commit Range Garbage Collection Blocker History: the information shown is only for reference and might not be reliable","title":"GC (Garbage Collection)"},{"location":"report/report_general/#lock-application-lock","text":"Transactions and Blocked Transactions Top Waiting Table / SQL: tables/SQLs that suffer most from application lock time are shown Top Waiting SQL (Table) / Lock Holder SQL: shows the lock holder activity that blocks the waiting SQL/Table, if the lock holder is 'IDLE', it means the lock holder is busy on the client side, i.e. hold the lock on the waiting table without commit fast enough. If the lock holder is busy on HANA, its active SQL Hash is shown Top Waiting SQL (Table) / Lock Holder Application Source: shows the top waiting SQL hash (table) and which lock holder application sources block it Top Lock Holder SQL / Waiting SQL (Table): shows the top lock holder SQL and its most blocked SQL hash (table) Top Lock Holder Application Source / Waiting SQL (Table): shows the top application source and its most blocked SQL hash (table)","title":"Lock (Application Lock)"},{"location":"report/report_general/#hsr-hana-system-replication","text":"HSR Configuration: shows the HANA System Replication configuration Log Shipping Throughput and Latency Log Shipping Delay and Backlog Log Replay Delay and Backlog Log Shipping Buffer","title":"HSR (HANA System Replication)"},{"location":"report/report_general/#trace","text":"Trace Configuration: shows trace settings that are explicitly activated or modified Trace Overview: shows the most important HANA Database traces generated within the analysis time frame Trace Content: shows the summary (in Pie and Sunburst format) and the detailed distribution of 'Component -> Source File -> Error Pattern' in HANA Database Traces","title":"Trace"},{"location":"report/report_overview/","text":"Introduction \u00b6 All the reports are single HTML files with interactive figures embedded. Report General Functions \u00b6 Below general functions can be used on all the figures: Use the menu to jump to each section and sub-section (e.g. [CPU] -> \u2018Thread Workload\u2019) All the figures are interactive: Mouse drag on the center of the figure can zoom in; The \u2018house\u2019 icon can reset the scale. Mouse drag at the corner of the figure can zoom in along different axis. Mouse drag on the axis can pan the figure. Mouse hover on the traces will show additional important information. Click on legend graph can toggle that trace; Double click on legend graph can focus on that trace. Click on legend word can be used to select the content (e.g. copy SQL HASH). Click on 'camera' icon can download the figure as png file. Report General Information \u00b6 When hovering the mouse on the left top corner title 'HANA HotSpots', the general information of the report will be shown with following information: Report Type SAP SID (Only for SAP Workload Report) Database ID System ID HANA Version MDC: Yes if the HANA DB is using Multitenant Database Containers Scale-out: Host number if the HANA DB is a Scale-out system, otherwise No System Replication: Yes if the HANA DB is using HSR Analysis Time Frame: The time frame of the analysis Analysis Time Frame (1/2): If the report type is 'Comparison Report', two time frames are shown Report Time: When is the report generated. If the report is generated based on HSIC or old data, then the report time is the timestamp when the raw data was collected Report Types \u00b6 Following different types of reports can be generated: (Click on the link to see detailed information) Report Type Purpose Overview Report Quickly check the HANA DB and show the load history, recommended to be used first General Report ` Show the general HANA DB KPIs and detect potential issues Top SQL Report Show the top most expensive SQL statements from different areas Single SQL Report Show the detailed information of a single SQL statement based on its statment hash Comparison Report Compare the KPI of two given timestamp to show the difference SAP Workload Report Show the SAP workload history based on ST03 and SDFMON data","title":"Report Overview"},{"location":"report/report_overview/#introduction","text":"All the reports are single HTML files with interactive figures embedded.","title":"Introduction"},{"location":"report/report_overview/#report-general-functions","text":"Below general functions can be used on all the figures: Use the menu to jump to each section and sub-section (e.g. [CPU] -> \u2018Thread Workload\u2019) All the figures are interactive: Mouse drag on the center of the figure can zoom in; The \u2018house\u2019 icon can reset the scale. Mouse drag at the corner of the figure can zoom in along different axis. Mouse drag on the axis can pan the figure. Mouse hover on the traces will show additional important information. Click on legend graph can toggle that trace; Double click on legend graph can focus on that trace. Click on legend word can be used to select the content (e.g. copy SQL HASH). Click on 'camera' icon can download the figure as png file.","title":"Report General Functions"},{"location":"report/report_overview/#report-general-information","text":"When hovering the mouse on the left top corner title 'HANA HotSpots', the general information of the report will be shown with following information: Report Type SAP SID (Only for SAP Workload Report) Database ID System ID HANA Version MDC: Yes if the HANA DB is using Multitenant Database Containers Scale-out: Host number if the HANA DB is a Scale-out system, otherwise No System Replication: Yes if the HANA DB is using HSR Analysis Time Frame: The time frame of the analysis Analysis Time Frame (1/2): If the report type is 'Comparison Report', two time frames are shown Report Time: When is the report generated. If the report is generated based on HSIC or old data, then the report time is the timestamp when the raw data was collected","title":"Report General Information"},{"location":"report/report_overview/#report-types","text":"Following different types of reports can be generated: (Click on the link to see detailed information) Report Type Purpose Overview Report Quickly check the HANA DB and show the load history, recommended to be used first General Report ` Show the general HANA DB KPIs and detect potential issues Top SQL Report Show the top most expensive SQL statements from different areas Single SQL Report Show the detailed information of a single SQL statement based on its statment hash Comparison Report Compare the KPI of two given timestamp to show the difference SAP Workload Report Show the SAP workload history based on ST03 and SDFMON data","title":"Report Types"},{"location":"report/report_overview1/","text":"Overview \u00b6 Overview report is designed to quickly check the KPI history of HANA database to detect potential timeframe with bottlenecks. It should normally be used first when starting to analyze a HANA database before a more detailed analysis that can be carried out through the General Report The report consists of following sections and sub-sections: (One sample 'Overview Report' can be seen here ) General \u00b6 Host Configuration: shows the host type, host role, etc Hardware Configuration: shows the hardware type, CPU number, Memory size, etc HANA Revision History: shows the complete history of HANA revisions Parameter Change History: shows the HANA parameter change history in the last 30 days HANA Downtime: shows when the HANA is down Workload Parameters: shows the workload related HANA parameters Database History: shows the most important KPI in one figure. The most important events such as parameter change, HANA upgrade, HANA downtime will also be shown in this figure If bottleneck is detected in following subsections, the critical time frame will be listed above the figure and highlighted in the figure with color \"Light Salmon\". CPU \u00b6 CPU and Threads: CPU and thread load aggregated by MAX and AVG are shown. If there is an issue, please run \"General Report\" -> \"CPU\" for detailed analysis. Memory \u00b6 Memory and Unloads: Memory consumption and table unloads are shown. If there is an issue, please run \"General Report\" -> \"Memory\" for detailed analysis. SQL \u00b6 SQL Avg Request Time: shows the average SQL request time. Sessions and SQL Executed per Second. If there is an issue, please run \"General Report\" -> \"SQL\" for detailed analysis. Lock \u00b6 Transactions and Blocked Transactions. If there is an issue, please run \"General Report\" -> \"Lock\" for detailed analysis. GC \u00b6 Versions and Commit Range. If there is an issue, please run \"General Report\" -> \"GC (Garbage Collection)\" for detailed analysis. Disk \u00b6 IO Load: the busy percentage of I/O operations are shown. If there is an issue, please run \"General Report\" -> \"Disk\" for detailed analysis.","title":"Overview Report"},{"location":"report/report_overview1/#overview","text":"Overview report is designed to quickly check the KPI history of HANA database to detect potential timeframe with bottlenecks. It should normally be used first when starting to analyze a HANA database before a more detailed analysis that can be carried out through the General Report The report consists of following sections and sub-sections: (One sample 'Overview Report' can be seen here )","title":"Overview"},{"location":"report/report_overview1/#general","text":"Host Configuration: shows the host type, host role, etc Hardware Configuration: shows the hardware type, CPU number, Memory size, etc HANA Revision History: shows the complete history of HANA revisions Parameter Change History: shows the HANA parameter change history in the last 30 days HANA Downtime: shows when the HANA is down Workload Parameters: shows the workload related HANA parameters Database History: shows the most important KPI in one figure. The most important events such as parameter change, HANA upgrade, HANA downtime will also be shown in this figure If bottleneck is detected in following subsections, the critical time frame will be listed above the figure and highlighted in the figure with color \"Light Salmon\".","title":"General"},{"location":"report/report_overview1/#cpu","text":"CPU and Threads: CPU and thread load aggregated by MAX and AVG are shown. If there is an issue, please run \"General Report\" -> \"CPU\" for detailed analysis.","title":"CPU"},{"location":"report/report_overview1/#memory","text":"Memory and Unloads: Memory consumption and table unloads are shown. If there is an issue, please run \"General Report\" -> \"Memory\" for detailed analysis.","title":"Memory"},{"location":"report/report_overview1/#sql","text":"SQL Avg Request Time: shows the average SQL request time. Sessions and SQL Executed per Second. If there is an issue, please run \"General Report\" -> \"SQL\" for detailed analysis.","title":"SQL"},{"location":"report/report_overview1/#lock","text":"Transactions and Blocked Transactions. If there is an issue, please run \"General Report\" -> \"Lock\" for detailed analysis.","title":"Lock"},{"location":"report/report_overview1/#gc","text":"Versions and Commit Range. If there is an issue, please run \"General Report\" -> \"GC (Garbage Collection)\" for detailed analysis.","title":"GC"},{"location":"report/report_overview1/#disk","text":"IO Load: the busy percentage of I/O operations are shown. If there is an issue, please run \"General Report\" -> \"Disk\" for detailed analysis.","title":"Disk"},{"location":"report/report_sapworkload/","text":"Overview \u00b6 SAP workload report (still in Beta mode) shows the KPI history from SAP application servers. Such report can only be generated with SAPGUI connection. The report consists of following sections and sub-sections: (One sample 'SAP Workload Report' can be seen here ) Tip Due to the fact that SAPGUI supports different decimal notation and date time format, it is very difficult for the tool to decide the correct format automatically. Therefore it is mandatory to set such configuration in the user profile to the German format as shown in the below pictures, otherwise the report can not be generated properly. ST03 \u00b6 Work Process Type History - Steps: shows the daily history of total work process steps aggregate by type Work Process Type History - Total Time: shows the daily history of total response time aggregate by work process type Daily History - All: shows the daily history of average response time of all work process types Daily History - Dialog: shows the daily history of average response time of Dialog work process Daily History - Background: shows the daily history of average response time of Background work process Daily History - RFC: shows the daily history of average response time of RFC Hourly History - All: shows the Hourly history of average response time of all work process types Info Note that on old Netweaver systems the data in night hours (00-06 and 21--24) are aggregated so that the values shown are not accurate. Customer should apply Note 910897 so that the data in each hour is captured separately. Hourly History - Dialog: shows the Hourly history of average response time of Dialog work process Hourly History - Background: shows the Hourly history of average response time of Background work process Hourly History - RFC: shows the Hourly history of average response time of RFC /SDF/SMON \u00b6 Application Server CPU - Each AS: shows the CPU utilization of each SAP Application Servers Work Process Number - All AS: shows the Active WP number of all SAP AS Work Process Number - Each AS: shows the Active WP number of each SAP AS Application Server Memory - Each AS: shows the Extended Memory, Heap Memory usage of each SAP AS Queue Length - Each AS: shows the Dialog/Update/Enqueue length of each SAP AS Users - All AS: shows the logins/session of all SAP AS Users - Each AS: shows the logins/session of each SAP AS","title":"SAP Workload Report"},{"location":"report/report_sapworkload/#overview","text":"SAP workload report (still in Beta mode) shows the KPI history from SAP application servers. Such report can only be generated with SAPGUI connection. The report consists of following sections and sub-sections: (One sample 'SAP Workload Report' can be seen here ) Tip Due to the fact that SAPGUI supports different decimal notation and date time format, it is very difficult for the tool to decide the correct format automatically. Therefore it is mandatory to set such configuration in the user profile to the German format as shown in the below pictures, otherwise the report can not be generated properly.","title":"Overview"},{"location":"report/report_sapworkload/#st03","text":"Work Process Type History - Steps: shows the daily history of total work process steps aggregate by type Work Process Type History - Total Time: shows the daily history of total response time aggregate by work process type Daily History - All: shows the daily history of average response time of all work process types Daily History - Dialog: shows the daily history of average response time of Dialog work process Daily History - Background: shows the daily history of average response time of Background work process Daily History - RFC: shows the daily history of average response time of RFC Hourly History - All: shows the Hourly history of average response time of all work process types Info Note that on old Netweaver systems the data in night hours (00-06 and 21--24) are aggregated so that the values shown are not accurate. Customer should apply Note 910897 so that the data in each hour is captured separately. Hourly History - Dialog: shows the Hourly history of average response time of Dialog work process Hourly History - Background: shows the Hourly history of average response time of Background work process Hourly History - RFC: shows the Hourly history of average response time of RFC","title":"ST03"},{"location":"report/report_sapworkload/#sdfsmon","text":"Application Server CPU - Each AS: shows the CPU utilization of each SAP Application Servers Work Process Number - All AS: shows the Active WP number of all SAP AS Work Process Number - Each AS: shows the Active WP number of each SAP AS Application Server Memory - Each AS: shows the Extended Memory, Heap Memory usage of each SAP AS Queue Length - Each AS: shows the Dialog/Update/Enqueue length of each SAP AS Users - All AS: shows the logins/session of all SAP AS Users - Each AS: shows the logins/session of each SAP AS","title":"/SDF/SMON"},{"location":"report/report_singlesql/","text":"Overview \u00b6 Single SQL report is designed to show detailed information of one particular SQL statement based on its statement hash. The report consists of following sections/sub-sections: (One sample 'Single SQL Report' can be seen here ) General Information \u00b6 SQL HASH and Text Bind Value: top 10 bind values in the expensive statement trace will be shown Execution Plan: execution plan with existing plan_id is shown, different plan levels are shown with different colors KPI \u00b6 Summary: most important KPI of the SQL statement is shown SQL Cache History: average run time of different plan_id are shown with different colors SQL Cache History Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on 4 different criteria: total elapsed time/total number of execution/ average time per execution/average row per execution Thread Workload: the figure shows the parallel degree history of the SQL statement Merge: table merge history is shown together with SQL average run time TSH (Thread State/Lock): thread sample history aggregated by thread state and lock name TSH (Thread Type/Method/Detail): thread sample history aggregated by thread type, thread method and thread detail TSH (DB User/App Name/Client IP): thread sample history aggregated by database user, application name and client IP TSH (App User/App Source): thread sample history aggregated by application user and application source Expensive SQL: KPI from expensive statement trace is shown SQL Hierarchy (as Parent): all child SQL with root statement hash equals the current SQL is shown, this figure helps to identify the dominant contributor if the SQL in question has child Application Lock (as Holder): the figure shows the lock waiter SQL / lock waiter table / lock waiter application source distribution that is blocked by the current SQL statement Objects \u00b6 Accessed Objects: the table shows all objects accessed by the SQL statement, click on the object name will jump to the detailed information of that object Object Hierarchy: if the SQL statement is accessing e.g. a procedure, the hierarchy of the accessed objects including sub procedures, functions, views, etc is shown. Different hierarchy levels are shown with different colors. Click on the object name will jump to the detailed information of the object View Definitions: all the normal view (i.e. excluding Calculation View, OLAP View, etc) definition is shown. Calculation View definition will be shown in a separate file Translation Table: if a join is performed, the translation table is shown Table Overview: first a table list with all involved tables are shown. click on the 'table name' will jump to the 'Table Detail' sub-section of the table click on the '#column' will jump to the 'Column Info' sub-section of the table click on the '#partition' or 'partition type' will jump to the 'Partition Definition' sub-section of the table click on the '#records' will jump to sub-section 'Table Size History (Row Number)' click on the '#index' will jump to the 'Index List' sub-section of the table click on the '#lob' will jump to the 'LOB Info' sub-section of the table click on the '#trigger' will jump to the 'Trigger Info' sub-section of the table click on the 'Total Memory Size(GB)' will jump to sub-section 'Table Size History (Memory)' click on the 'Disk Size(GB)' will jump to sub-section 'Table Size History (Disk)' click on the 'Last Merge Time' will jump to sub-section KPI -> 'Merge' click on ' - Table Detail' will jump to the table overview click on ' - Index List' or any other detailed info sub-section title will jump back to the 'Table Detail' sub-section Table Size History (Memory): table memory size history is shown together with the SQL average run time Table Size History (Row Number): table row size history is shown together with the SQL average run time Table Size History (Disk): table disk size history is shown together with the SQL average run time Optimization Helper \u00b6 SQL Text with Bind Value: SQL texts with bind variable replaced by bind value is shown Warning The SQL text with bind value is used for further troubleshooting. It does NOT mean that the SQL text with bind value is better than the original SQL with ? in terms of performance","title":"Single SQL Report"},{"location":"report/report_singlesql/#overview","text":"Single SQL report is designed to show detailed information of one particular SQL statement based on its statement hash. The report consists of following sections/sub-sections: (One sample 'Single SQL Report' can be seen here )","title":"Overview"},{"location":"report/report_singlesql/#general-information","text":"SQL HASH and Text Bind Value: top 10 bind values in the expensive statement trace will be shown Execution Plan: execution plan with existing plan_id is shown, different plan levels are shown with different colors","title":"General Information"},{"location":"report/report_singlesql/#kpi","text":"Summary: most important KPI of the SQL statement is shown SQL Cache History: average run time of different plan_id are shown with different colors SQL Cache History Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on 4 different criteria: total elapsed time/total number of execution/ average time per execution/average row per execution Thread Workload: the figure shows the parallel degree history of the SQL statement Merge: table merge history is shown together with SQL average run time TSH (Thread State/Lock): thread sample history aggregated by thread state and lock name TSH (Thread Type/Method/Detail): thread sample history aggregated by thread type, thread method and thread detail TSH (DB User/App Name/Client IP): thread sample history aggregated by database user, application name and client IP TSH (App User/App Source): thread sample history aggregated by application user and application source Expensive SQL: KPI from expensive statement trace is shown SQL Hierarchy (as Parent): all child SQL with root statement hash equals the current SQL is shown, this figure helps to identify the dominant contributor if the SQL in question has child Application Lock (as Holder): the figure shows the lock waiter SQL / lock waiter table / lock waiter application source distribution that is blocked by the current SQL statement","title":"KPI"},{"location":"report/report_singlesql/#objects","text":"Accessed Objects: the table shows all objects accessed by the SQL statement, click on the object name will jump to the detailed information of that object Object Hierarchy: if the SQL statement is accessing e.g. a procedure, the hierarchy of the accessed objects including sub procedures, functions, views, etc is shown. Different hierarchy levels are shown with different colors. Click on the object name will jump to the detailed information of the object View Definitions: all the normal view (i.e. excluding Calculation View, OLAP View, etc) definition is shown. Calculation View definition will be shown in a separate file Translation Table: if a join is performed, the translation table is shown Table Overview: first a table list with all involved tables are shown. click on the 'table name' will jump to the 'Table Detail' sub-section of the table click on the '#column' will jump to the 'Column Info' sub-section of the table click on the '#partition' or 'partition type' will jump to the 'Partition Definition' sub-section of the table click on the '#records' will jump to sub-section 'Table Size History (Row Number)' click on the '#index' will jump to the 'Index List' sub-section of the table click on the '#lob' will jump to the 'LOB Info' sub-section of the table click on the '#trigger' will jump to the 'Trigger Info' sub-section of the table click on the 'Total Memory Size(GB)' will jump to sub-section 'Table Size History (Memory)' click on the 'Disk Size(GB)' will jump to sub-section 'Table Size History (Disk)' click on the 'Last Merge Time' will jump to sub-section KPI -> 'Merge' click on ' - Table Detail' will jump to the table overview click on ' - Index List' or any other detailed info sub-section title will jump back to the 'Table Detail' sub-section Table Size History (Memory): table memory size history is shown together with the SQL average run time Table Size History (Row Number): table row size history is shown together with the SQL average run time Table Size History (Disk): table disk size history is shown together with the SQL average run time","title":"Objects"},{"location":"report/report_singlesql/#optimization-helper","text":"SQL Text with Bind Value: SQL texts with bind variable replaced by bind value is shown Warning The SQL text with bind value is used for further troubleshooting. It does NOT mean that the SQL text with bind value is better than the original SQL with ? in terms of performance","title":"Optimization Helper"},{"location":"report/report_topsql/","text":"Overview \u00b6 Top SQL report shows the top 10 most expensive SQL statements from different criteria. The report consists of following sections/sub-sections: (One sample 'Top SQL Report' can be seen here ) Elapsed Time \u00b6 SQL Cache - Highest Total Elapsed Time: shows top 10 SQL statements with longest total elapsed time from SQL cache. If 'Y' is shown in the column 'Known', this SQL statement is documented in SAP Note 2000002 Expensive SQL - Highest Total Elapsed Time: shows the top 10 SQL statements with longest total elapsed time from 'Expensive SQL Trace' CPU \u00b6 SQL with Most Thread Samples: shows top 10 SQL statements with most thread samples Memory \u00b6 Expensive SQL - Highest Memory Consumption: shows top 10 SQL statements with highest memory consumption from 'Expensive SQL Trace' SQL causing OOM: show all SQL statements causing OOM SQL Detail \u00b6 The detailed information of all the above most expensive SQL statements are shown in this section with following sub-sections: SQL Text If the SQL is already documentes, the related information from SAP Note 2000002 will be shown here SQL KPI History: shows the history KPI of the SQL statement including number of execution, rows per execution, average elapsed time per exeuction plan id, average elapsed time per row SQL Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on total elapsed time SQL Thread Sample History: shows the thread sample history aggregated by following combinations: Thread State and Lock Name Thread Type and Thread Method DB User and Application Name Application User and Application Source","title":"Top SQL Report"},{"location":"report/report_topsql/#overview","text":"Top SQL report shows the top 10 most expensive SQL statements from different criteria. The report consists of following sections/sub-sections: (One sample 'Top SQL Report' can be seen here )","title":"Overview"},{"location":"report/report_topsql/#elapsed-time","text":"SQL Cache - Highest Total Elapsed Time: shows top 10 SQL statements with longest total elapsed time from SQL cache. If 'Y' is shown in the column 'Known', this SQL statement is documented in SAP Note 2000002 Expensive SQL - Highest Total Elapsed Time: shows the top 10 SQL statements with longest total elapsed time from 'Expensive SQL Trace'","title":"Elapsed Time"},{"location":"report/report_topsql/#cpu","text":"SQL with Most Thread Samples: shows top 10 SQL statements with most thread samples","title":"CPU"},{"location":"report/report_topsql/#memory","text":"Expensive SQL - Highest Memory Consumption: shows top 10 SQL statements with highest memory consumption from 'Expensive SQL Trace' SQL causing OOM: show all SQL statements causing OOM","title":"Memory"},{"location":"report/report_topsql/#sql-detail","text":"The detailed information of all the above most expensive SQL statements are shown in this section with following sub-sections: SQL Text If the SQL is already documentes, the related information from SAP Note 2000002 will be shown here SQL KPI History: shows the history KPI of the SQL statement including number of execution, rows per execution, average elapsed time per exeuction plan id, average elapsed time per row SQL Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on total elapsed time SQL Thread Sample History: shows the thread sample history aggregated by following combinations: Thread State and Lock Name Thread Type and Thread Method DB User and Application Name Application User and Application Source","title":"SQL Detail"}]}