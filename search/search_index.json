{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 HANA HotSpots is an automation tool to capture HANA Database KPIs and present the result in an interactive report so that all stake holders (Support, System Administrator, etc) can understand the status of the HANA system intuitively . HANA HotSpots (i.e the GUI version) is released on Windows as of v1.0 hscmd (HANA HotSpots CMD) is the command line version of the same tool. To understand how to use it please run hscmd -h hscmd on Windows is released as of v1.3 hscmd on Mac is released as of v1.8 hscmd on Linux is released as of v1.9 HANA HotSpots Cloud is available via this link . It can be used to analyze HANA Cloud system hosted on BTP. Tip Please use 'accounts.sap.com' as the identity provider during logon Outlook \u00b6 Examples \u00b6 HANA HotSpots can generate different types of report for HANA troubleshooting, check the example reports below: General Report Example Top SQL Report Example Single SQL Report Example Comparison Report Example SAP Workload Report Example Usage Statistics \u00b6 The usage statistics of HANA HotSpots can be seen in the below link. It shows how many reports have been generated daily and weekly. Usage Statistics How to use the tool? \u00b6 The user interface (see above) is straightforward including 3 steps: 1. Connect to a HANA Database \u00b6 There are 4 ways to connect to a HANA database: Custom System via SAP Proxy If SAP HANA Database connection is open from the customer side, it is possible to connect to \"localhost\" after saptcpproxy is started. Please make sure that the port used is matching the saptcpproxy port, the default port is 5000. SAPGUI Connection As of V1.4 Windows version, it is possible to connect to HANA database through SAPGUI. The prerequisite is as following: Transaction ST04 -> Diagnostics -> SQL Editor has been started on an SAP system running on HANA. (Not required as of V2.2) HANA HotSpots will always try to connect to the last valid SAPGUI session. SAPGUI scripting is enabled in the SAPGUI options as below, it is important to uncheck the two \"Notify\" sub-options to suppress the annoying warning message. Following ABAP parameters should be set to the Required Value Parameter Name Default Value Required Value sapgui/user_scripting FALSE TRUE sapgui/user_scripting_disable_recording FALSE FALSE sapgui/user_scripting_force_notification FALSE FALSE sapgui/user_scripting_per_user FALSE FALSE sapgui/user_scripting_set_readonly FALSE FALSE Please check this link for detailed instructions. If the highlighted icon in the SAPGUI status bar is visible, then it means SAPGUI scripting is allowed. Otherwise please ask the customer for the permission to change them. All these parameters can be changed online. The SAP BASIS version should be higher or equal to 7.02 SP16 / 7.30 SP12 / 7.31 SP12 / 7.40 SP07 Warning Please note that when using SAPGUI connection, the tool needs to access clipboard often, therefore please do not make \"copy/paste\" operation in parallel as otherwise the conflict may cause the tool to fail. Info SAPGUI connection is only supported on windows (including GUI and CMD version). If you want to use SAPGUI connection on MAC, please use WTS Tip Sometimes the SAPGUI connection is not working as the tool can not find the valid SAPGUI session. This can happen due to various reasons, e.g. connecting through firefighter, firewall configured, etc. Please test to use WTS to see if the SAPGUI connection can be used. Self Defined System Define the Host/Port of any HANA system on the network for direct access. Use hdbuserstore Key If key is generated and stored via hdbuserstore, it is also possible to connect to HANA system via the key. Furthermore, if SSO check box is flagged, the password can be omitted to connect to HANA system via Single-Sign-On. If SSL check box is flagged, the secure connection will be used to connect to HANA system. (e.g. should be used when connecting to HANA Cloud System) 2. Select Topic \u00b6 Once the database connection is successful, select a Topic to start the analysis. Topic is a collection of Checks that is focusing on one particular area. Currently there are 5 Checks provided: General Report Focusing on most important HANA KPIs such as CPU, Memory, Thread Samples, Main Activities, etc. The analysis output would immediately show the HotSpots (i.e. When and what was the most significant bottleneck) of the HANA Database. At the beginning of the report, a summary section is provided to automatically detect the most critical issues (if any) identified on the HANA database. Top SQL Report Focusing on most expensive SQL statements based on several criteria: Total Elapsed Time , Number of Thread Samples , Average memory consumption , etc. The analysis output would show the overview and detailed information of all these top SQL statements including SQL text, heatmap, KPI history, etc. Single SQL Report Most important information of one SQL statement is shown: KPI history, all objects accessed, etc. Comparison Report Show the difference of most important HANA KPIs between two time frame selected. It is especially helpful to identify why HANA database behaviour suddenly changes. SAP Workload Report Show the KPI on SAP appliation servers. e.g. KPI History from ST03. 3. Select Time Frame \u00b6 The next step is to select the Time Frame of the analysis. The time frame selection is the same for all reports except 'Comparison Report' and 'SAP Workload Report': General Report By default, the analysis is focusing on the last 24 hours. The HANA server time will be used automatically, therefore do not be surprised if the appearing time is not the same as the local time. Some shortcuts are provided in the interface so that it is easier to select the \"Start Time\" and \"End Time \" of the analysis. e.g. the combo box beside the Start Time label can be used to choose the baseline of the start time: Current time -> set the start time to the current HANA server time. End time -> set the start time to be the same as the End Time. Start of M_SERVICE_THREAD_SAMPLES -> set the start time to the beginning of M_SERVICE_THREAD_SAMPLES, when this is selected, the analysis will focus on the recent thread sample history that has a higher granularity. Most recent HANA startup time -> set the start time to the last HANA startup time. The \"+\" and \"-\" button together with the 'Hour'/'6 Hour' radio button can be used to quickly change the start/end time. The \"0\" button will set the time to zero, i.e. the midnight of the date. Comparison Report Both Time Frame 1 and Time Frame 2 need to be filled. If the time length of time frame 1 equals the length of time frame 2, the 'Analysis Time Range' label will be shown in green to imply that it is recommended to analyze with same time length for comparison report . SAP Workload Report Because the retention time is different on each system, therefore the time frame selection is ignored . The tool will fetch all the available data to generate the report. 4. Start Analysis \u00b6 After the Topic and Timeframe are selected, click the \"Start Analysis\" button to launch the analysis. Depending on the workload of the system and the timeframe length selected, the analysis time may vary between less than one minute to more than 15 minutes. (Please have some patience : ) ) Finally \"Show Result\" button would open the report in your default browser. The report is a single HTML file located under the working directory with interactive embedded figures to show the HANA Database information. It is possible to zoom in/out and filter different KPIs for better understanding of the system status. Depending on the analysis choice, the report size ranges from a few MB to more than 20MB. Also note that it takes a while in the browser for the report to be fully rendered. 5. Log File \u00b6 A log file with name hsgui.log or hscmd.log (depending on the version) is generated under the same directory where the tool is located. If error occurs, more information can be seen in the log file. 6. What kind of authorization is required to use the tool? \u00b6 The tool basically needs to access HANA monitoring views ( M_* ) and statistics server views ( _SYS_STATISTICS.HOST_* ). Therefore the HANA database user used in the tool need the privilege to access these views. i.e. the user should have the standard catalog role MONITORING granted. Options \u00b6 The option menu will show options for different topics: General Option Choose Output Folder: select the output folder where the generated report is saved Output Folder Naming Convention: the output folder can have 2 naming convention: Current Time: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00, where 2021/01/01 08:00 is the current timestamp when the report is generated. Analaysis Time Frame: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00_2021.01.02_08.00, where 2021/01/01 08:00 - 2021/01/02 08:00 is the analysis time frame. Save Raw Data: if not ticked, no raw data (i.e. *.txt/csv) will be saved during report generation Tip Use 'Analysis Time Frame' as the output folder naming convention is helpful when multiple check is carried out on the same system with different time frames. General Report Options Include Parameter Check: if checked, any topic including HANA parameter check will be carried out, otherwise it will be skipped to save time. Top Issue: if checked, the General Report will include a summary section at the beginning to show automatically detected top issues on the HANA database. Complete Summary: if checked, the summary section will show information of one area even if no issue has been detected. Include Static Info: if checked, static information is included in the general report, e.g. largest tables on the system. In the future more static information that does not change often along time line will be included. Include Link to Raw Data: if checked, link to the raw data will be included above each figure. Select Sections: it is possible to choose which section would be included in the generated General Report. Comparison Report Options Select Sections: it is possible to choose which section would be included in the generated Comparison Report. When the tool is closed, the option will be saved as configuration file hs.<version>.ini and restored automatically next time it starts. How to read the generated report? \u00b6 General functions \u00b6 Use the menu to jump to each section and sub-section (e.g. [CPU] -> \u2018Thread Workload\u2019) All the figures are interactive: Mouse drag on the center of the figure can zoom in; The \u2018house\u2019 icon can reset the scale. Mouse drag at the corner of the figure can zoom in along different axis. Mouse drag on the axis can pan the figure. Mouse hover on the traces will show additional important information. Click on legend graph can toggle that trace; Double click on legend graph can focus on that trace. Click on legend word can be used to select the content (e.g. copy SQL HASH). Click on 'camera' icon can download the figure as png file. There are 3 types of reports that can be generated, they are explained in detail below: General Report \u00b6 General report consists of following sections and sub-sections: (One sample 'General Report' can be seen here ) Summary \u00b6 Top Issues: most critical issues identified are shown in a table. The columns of the summary tables have the following meaning Area: area of the issue Priority: Very High / High / Medium / Info Description: describe the issue, if option \"Complete Summary\" is checked, then 'No issues Detected' will be shown here Host: on which host the issue occurs Time: The critical timestamp when the issue occurs Section: Link to the section Top SQL: shows top SQL statements with different critiria, hovering over the SQL Hash will show SQL text that can be copied to the clipboard Most Running Thread: shows the top 5 SQL with most threads in status 'Running', i.e. consuming CPU Most Thread Sample: shows the top 5 SQL with most thread samples Most Avg Memory Allocation: shows the top 5 SQL with most average memory allocation based on sql plan cache history Expensive SQL with Most Used Memory: shows the top 5 SQL with most used memory based on expensive SQL trace Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on sql plan cache history Expensive SQL with Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on expensive SQL trace General \u00b6 Host Configuration: shows the host type, host role, hardware model, etc HANA Revision History: shows the complete history of HANA revisions Parameter \u00b6 Check Result: if option \"Include Parameter Check\" is checked, the HANA parameter check result is shown. Change History: parameter change history is shown (available as of HANA 2.00.030) Info HANA parameter check is not yet available for HANA Cloud CPU \u00b6 CPU Configuration: CPU type, Number of CPU, etc are shown Detailed NUMA info is shown as of HANA 2.00.010 CPU vs. Threads: CPU load aggregated by MAX and AVG are shown. The time interval depends on the time range selected: Time range >= 6 hours: interval = 10 mins Time range < 6 hour: interval = 2 mins Thread Workload: Workload related parameters are shown. If workload class are defined, they will be shown. In the graph, 'session number' stands for the number of sessions connected to HANA, i.e. number of active work processes on SAP Application Servers SQL with Most Running Thread: SQL hash and text with thread state = 'Running' are shown. The data filter based on thread sample history depends on the time range selected, the below rule apply to all figures involving thread sample history: Time range <= 6 hours: interval = 2 mins; Others percent = 0: i.e. all thread sample will be shown 6 hours < Time range <= 2 days: interval = 10 mins; Others percent = 0.5: i.e. all threads that contribute to less than 0.5 percent in each time interval will be aggregated together into category '-- Others --' as shown in the figure Time range > 2 days: interval = 1 hour; Other percent = 1, similarly, individual portion less than 1 percent will be aggregated into category '-- Others -- ' SQL with Most Thread Sample: SQL hash and text with all threads, sometimes even if the thread state is not 'Running', there is still a chance that this thread is busy with CPU Application Source with Most Running Thread: Click on the center of the 'Sunburst' figure would focus only on that application source and show the distribution of SQL related to this source NUMA Load: shows the distribution of thread samples related to each NUMA load Memory \u00b6 Memory Configuration: memory configuration Memory and Unloads: memory consumption from HOST_RESOURCE_UTILIZATION_STATISTICS and HOST_LOAD_HISTORY_SERVICE Top Consumer by Component: memory consumption from HOST_SERVICE_COMPONENT_MEMORY Top Consumer by Area / Subarea / Objects: memory consumption from script HANA_Memory_TopConsumers, aggregated by different granularity Top Consumer of Heap Area: top consumer of Heap Areas, information from SAP Note 1999997 is shown below the figure to show detailed information of the top heap areas Service Memory: memory consumption from HOST_SERVICE_MEMORY Expensive SQL with Top Used Memory: SQL with most memory consumption from expensive SQL trace are shown. SQL with Top Avg Memory Allocation: SQL with most allocated memory from SQL plan cache is shown, note that these figures are the allocated memory, not the peak memory foot print. Use it as reference only and it is not reliable to decide SQL with most memory consumption in this figure Activity \u00b6 Important Activities: activities that last longer than 1 minute are shown: Indexserver down / Backup / Merge / Consistency Check / Savepoint Tables with High Merge Time: all table/partitions with merge running time longer than 1 minute are shown Savepoint Duration and Throughput: Savepoints that last longer than 1 minute are shown ConsistentChangeLock Holder - SQL Hash: if block time of any savepoint is longer than 10 sec, than the SQL that is holding the CCL is shown ConsistentChangeLock Holder - Thread State and Lock Name: similarly, if the lock holder of CCL is waiting for another lock, such lock information is shown SQL \u00b6 Sessions and SQL Executed per Second SQL Workload SQL Cache Overview: if the SQL cache is undersized, the figure will show the issue SQL Avg Request Time SQL with Top Elapsed Time: SQL with most total elapsed time is shown, the mouse hover information will also show the elapsed time per execution, elapsed time per row, etc. Expensive SQL with Top Elapsed Time: since the retention time of Expensive SQL trace depends on the system workload, it is normal that majority part of the history information is empty Thread Sample \u00b6 Thread State and Lock Name: information from SAP Note 1999998 is shown below the figure to show detailed information Thread Type and Thread Method: information from SAP Note 2114710 is shown below the figure to show detailed information SQL and Lock Name: top SQL and its waiting lock type is shown. If the lock type is '?', it means the SQL is likely to be busy on CPU SQL and Thread Method: top SQL and its thread method is shown. SQL and Passport Action: top SQL and the passport action is shown. Normally passport action shows meaningful application context of the SQL. SQL Hierarchy: the figure shows the SQL Hierarchy where SQL HASH is different from the Root HASH. Such graph will show e.g. which individual SQL triggered by a procedure call is dominant. DB User Application User Client Host Callstack History: shows the historical distribution of dominant call stacks (maximum depth = 17) Space \u00b6 Volume, Backup and Memory Size Log Volume and Merge: the figure shows the hourly generated log size in comparison with the tables with most merged rows, these top tables are in general responsible for most of the log volumes Table with Largest Disk Size: the history information is recorded every 6 hours, so it is normal if the result is empty when the analysis time range is less than 6 hours. Both column table and row table are considered Column Table with Largest Memory Size: the result is aggregated by table Column Table with Most Rows: the result is aggregated by partition Column Table with Most Read Count Column Table with Most Write Count Row Table with Largest Memory Size Row Table with Largest Fragmented Size Row Table with Most Rows Disk \u00b6 Disk Configuration: host, usage type, path, file system type, total size and used size are shown Disk Size: the history usage of disk size is sampled once per day DATA Volume Read DATA Volume Write LOG Volume Write Commit Frequency and Latency Backup \u00b6 Data Backup History: the backup status can be seen with mouse hover Log Backup History Garbage Collection \u00b6 Versions and Commit Range Garbage Collection Blocker History: the information shown is only for reference and might not be reliable Application Lock \u00b6 Transactions and Blocked Transactions Waiting SQL HASH: top SQL waiting for application lock Waiting Table: top tables on which SQL is waiting for application lock Lock Holder Application Source: top application source holding the lock Waiting SQL / Waiting Table / Lock Holder Status: shows the lock holder status that blocks the waiting SQL/Table, Status = 'ACTIVE' means the lock holder is busy with another SQL; Status = 'IDLE' means the lock holder is busy on the SAP side Waiting SQL / Waiting Table / Lock Holder SQL: if the lock holder status is 'ACTIVE', this figure shows these SQLs that is holding the lock Waiting SQL / Waiting Table / Lock Holder Source: shows the lock holder application source that holds the lock System Replication \u00b6 HSR Configuration: shows the HANA System Replication configuration Log Shipping Throughput and Latency Log Shipping Delay and Backlog Log Replay Delay and Backlog Log Shipping Buffer Trace \u00b6 Trace Configuration: shows trace settings that are explicitly activated or modified Trace Overview: shows the most important HANA Database traces generated within the analysis time frame Trace Content: shows the summary (in Pie and Sunburst format) and the detailed distribution of 'Component -> Source File -> Error Pattern' in HANA Database Traces Top SQL Report \u00b6 Top SQL report shows the top 10 most expensive SQL statements from different criteria. The report consists of following sections/sub-sections: (One sample 'Top SQL Report' can be seen here ) Elapsed Time \u00b6 SQL Cache - Highest Total Elapsed Time: shows top 10 SQL statements with longest total elapsed time from SQL cache. If 'Y' is shown in the column 'Known', this SQL statement is documented in SAP Note 2000002 Expensive SQL - Highest Total Elapsed Time: shows the top 10 SQL statements with longest total elapsed time from 'Expensive SQL Trace' CPU \u00b6 SQL with Most Thread Samples: shows top 10 SQL statements with most thread samples Memory \u00b6 Expensive SQL - Highest Memory Consumption: shows top 10 SQL statements with highest memory consumption from 'Expensive SQL Trace' SQL causing OOM: show all SQL statements causing OOM SQL Detail \u00b6 The detailed information of all the above most expensive SQL statements are shown in this section with following sub-sections: SQL Text If the SQL is already documentes, the related information from SAP Note 2000002 will be shown here SQL KPI History: shows the history KPI of the SQL statement including number of execution, rows per execution, average elapsed time per exeuction plan id, average elapsed time per row SQL Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on total elapsed time SQL Thread Sample History: shows the thread sample history aggregated by following combinations: Thread State and Lock Name Thread Type and Thread Method DB User and Application Name Application User and Application Source Single SQL Report \u00b6 Single SQL report is designed to show detailed information of one particular SQL statement based on its statement hash. The report consists of following sections/sub-sections: (One sample 'Single SQL Report' can be seen here ) General Information \u00b6 SQL HASH and Text Bind Value: top 10 bind values in the expensive statement trace will be shown Execution Plan: execution plan with existing plan_id is shown, different plan levels are shown with different colors KPI \u00b6 Summary: most important KPI of the SQL statement is shown SQL Cache History: average run time of different plan_id are shown with different colors SQL Cache History Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on 4 different criteria: total elapsed time/total number of execution/ average time per execution/average row per execution Thread Workload: the figure shows the parallel degree history of the SQL statement Merge: table merge history is shown together with SQL average run time TSH (Thread State/Lock): thread sample history aggregated by thread state and lock name TSH (Thread Type/Method/Detail): thread sample history aggregated by thread type, thread method and thread detail TSH (DB User/App Name/Client IP): thread sample history aggregated by database user, application name and client IP TSH (App User/App Source): thread sample history aggregated by application user and application source Expensive SQL: KPI from expensive statement trace is shown SQL Hierarchy (as Parent): all child SQL with root statement hash equals the current SQL is shown, this figure helps to identify the dominant contributor if the SQL in question has child Application Lock (as Holder): the figure shows the lock waiter SQL / lock waiter table / lock waiter application source distribution that is blocked by the current SQL statement Objects \u00b6 Accessed Objects: the table shows all objects accessed by the SQL statement, click on the object name will jump to the detailed information of that object Object Hierarchy: if the SQL statement is accessing e.g. a procedure, the hierarchy of the accessed objects including sub procedures, functions, views, etc is shown. Different hierarchy levels are shown with different colors. Click on the object name will jump to the detailed information of the object View Definitions: all the normal view (i.e. excluding Calculation View, OLAP View, etc) definition is shown. Calculation View definition will be shown in a separate file Translation Table: if a join is performed, the translation table is shown Table Overview: first a table list with all involved tables are shown. click on the 'table name' will jump to the 'Table Detail' sub-section of the table click on the '#column' will jump to the 'Column Info' sub-section of the table click on the '#partition' or 'partition type' will jump to the 'Partition Definition' sub-section of the table click on the '#records' will jump to sub-section 'Table Size History (Row Number)' click on the '#index' will jump to the 'Index List' sub-section of the table click on the '#lob' will jump to the 'LOB Info' sub-section of the table click on the '#trigger' will jump to the 'Trigger Info' sub-section of the table click on the 'Total Memory Size(GB)' will jump to sub-section 'Table Size History (Memory)' click on the 'Disk Size(GB)' will jump to sub-section 'Table Size History (Disk)' click on the 'Last Merge Time' will jump to sub-section KPI -> 'Merge' click on ' - Table Detail' will jump to the table overview click on ' - Index List' or any other detailed info sub-section title will jump back to the 'Table Detail' sub-section Table Size History (Memory): table memory size history is shown together with the SQL average run time Table Size History (Row Number): table row size history is shown together with the SQL average run time Table Size History (Disk): table disk size history is shown together with the SQL average run time Optimization Helper \u00b6 SQL Text with Bind Value: SQL texts with bind variable replaced by bind value is shown Warning The SQL text with bind value is used for further troubleshooting. It does NOT mean that the SQL text with bind value is better than the original SQL with ? in terms of performance Comparison Report \u00b6 Comparison report (still in Beta mode) shows the KPI history from different timeframe in one figure so that it is easier to identify the KPI difference along timeline. It consists of following sections and sub-sections: (One sample 'Comparison Report' can be seen here ) CPU \u00b6 CPU vs. Threads: in general all info from time frame 1 is shown in blue and all info from time frame 2 is shown in red Thread Workload SQL with Most Running Thread Overview: The bar with '+' pattern is from time frame 1, the same applies to all the overview figures in the comparison report SQL with Most Running Thread Detail SQL with Most Thread Sample Overview SQL with Most Thread Sample Detail SQL \u00b6 SQL Statements per Second SQL Avg Request Time SQL with Most Elapsed Time Overview SQL with Most Elapsed Time Detail Thread Sample \u00b6 Thread State and Lock Name Overview Thread State and Lock Name Detail Thread Type and Thread Method Overview Thread Type and Thread Method Detail SQL and Lock Name Overview SQL and Lock Name Detail SQL and Thread Method Overview SQL and Thread Method Detail Disk \u00b6 DATA Volume Read SAP Workload Report \u00b6 SAP Workload report (still in Beta mode) shows the KPI history from SAP application servers. Such report can only be generated with SAPGUI connection. It consists of following sections and sub-sections: (One sample 'SAP Workload Report' can be seen here ) ST03 \u00b6 Work Process Type History - Steps: shows the daily history of total work process steps aggregate by type Work Process Type History - Total Time: shows the daily history of total response time aggregate by work process type Daily History - All: shows the daily history of average response time of all work process types Daily History - Dialog: shows the daily history of average response time of Dialog work process Daily History - Background: shows the daily history of average response time of Background work process Daily History - RFC: shows the daily history of average response time of RFC Hourly History - All: shows the Hourly history of average response time of all work process types Info Note that on old Netwearver systems the data in night hours (00-06 and 21--24) are aggregated so that the values shown are not accurate. Customer should apply Note 910897 so that the data in each hour is captured separately. Hourly History - Dialog: shows the Hourly history of average response time of Dialog work process Hourly History - Background: shows the Hourly history of average response time of Background work process Hourly History - RFC: shows the Hourly history of average response time of RFC Feedback? \u00b6 Author: ZHONG, Mingqian (Tim) (Please contact me via mingqian.zhong@sap.com ) / Sponsor: Ramu Vidadala","title":"Manual"},{"location":"#overview","text":"HANA HotSpots is an automation tool to capture HANA Database KPIs and present the result in an interactive report so that all stake holders (Support, System Administrator, etc) can understand the status of the HANA system intuitively . HANA HotSpots (i.e the GUI version) is released on Windows as of v1.0 hscmd (HANA HotSpots CMD) is the command line version of the same tool. To understand how to use it please run hscmd -h hscmd on Windows is released as of v1.3 hscmd on Mac is released as of v1.8 hscmd on Linux is released as of v1.9 HANA HotSpots Cloud is available via this link . It can be used to analyze HANA Cloud system hosted on BTP. Tip Please use 'accounts.sap.com' as the identity provider during logon","title":"Overview"},{"location":"#outlook","text":"","title":"Outlook"},{"location":"#examples","text":"HANA HotSpots can generate different types of report for HANA troubleshooting, check the example reports below: General Report Example Top SQL Report Example Single SQL Report Example Comparison Report Example SAP Workload Report Example","title":"Examples"},{"location":"#usage-statistics","text":"The usage statistics of HANA HotSpots can be seen in the below link. It shows how many reports have been generated daily and weekly. Usage Statistics","title":"Usage Statistics"},{"location":"#how-to-use-the-tool","text":"The user interface (see above) is straightforward including 3 steps:","title":"How to use the tool?"},{"location":"#1-connect-to-a-hana-database","text":"There are 4 ways to connect to a HANA database: Custom System via SAP Proxy If SAP HANA Database connection is open from the customer side, it is possible to connect to \"localhost\" after saptcpproxy is started. Please make sure that the port used is matching the saptcpproxy port, the default port is 5000. SAPGUI Connection As of V1.4 Windows version, it is possible to connect to HANA database through SAPGUI. The prerequisite is as following: Transaction ST04 -> Diagnostics -> SQL Editor has been started on an SAP system running on HANA. (Not required as of V2.2) HANA HotSpots will always try to connect to the last valid SAPGUI session. SAPGUI scripting is enabled in the SAPGUI options as below, it is important to uncheck the two \"Notify\" sub-options to suppress the annoying warning message. Following ABAP parameters should be set to the Required Value Parameter Name Default Value Required Value sapgui/user_scripting FALSE TRUE sapgui/user_scripting_disable_recording FALSE FALSE sapgui/user_scripting_force_notification FALSE FALSE sapgui/user_scripting_per_user FALSE FALSE sapgui/user_scripting_set_readonly FALSE FALSE Please check this link for detailed instructions. If the highlighted icon in the SAPGUI status bar is visible, then it means SAPGUI scripting is allowed. Otherwise please ask the customer for the permission to change them. All these parameters can be changed online. The SAP BASIS version should be higher or equal to 7.02 SP16 / 7.30 SP12 / 7.31 SP12 / 7.40 SP07 Warning Please note that when using SAPGUI connection, the tool needs to access clipboard often, therefore please do not make \"copy/paste\" operation in parallel as otherwise the conflict may cause the tool to fail. Info SAPGUI connection is only supported on windows (including GUI and CMD version). If you want to use SAPGUI connection on MAC, please use WTS Tip Sometimes the SAPGUI connection is not working as the tool can not find the valid SAPGUI session. This can happen due to various reasons, e.g. connecting through firefighter, firewall configured, etc. Please test to use WTS to see if the SAPGUI connection can be used. Self Defined System Define the Host/Port of any HANA system on the network for direct access. Use hdbuserstore Key If key is generated and stored via hdbuserstore, it is also possible to connect to HANA system via the key. Furthermore, if SSO check box is flagged, the password can be omitted to connect to HANA system via Single-Sign-On. If SSL check box is flagged, the secure connection will be used to connect to HANA system. (e.g. should be used when connecting to HANA Cloud System)","title":"1. Connect to a HANA Database"},{"location":"#2-select-topic","text":"Once the database connection is successful, select a Topic to start the analysis. Topic is a collection of Checks that is focusing on one particular area. Currently there are 5 Checks provided: General Report Focusing on most important HANA KPIs such as CPU, Memory, Thread Samples, Main Activities, etc. The analysis output would immediately show the HotSpots (i.e. When and what was the most significant bottleneck) of the HANA Database. At the beginning of the report, a summary section is provided to automatically detect the most critical issues (if any) identified on the HANA database. Top SQL Report Focusing on most expensive SQL statements based on several criteria: Total Elapsed Time , Number of Thread Samples , Average memory consumption , etc. The analysis output would show the overview and detailed information of all these top SQL statements including SQL text, heatmap, KPI history, etc. Single SQL Report Most important information of one SQL statement is shown: KPI history, all objects accessed, etc. Comparison Report Show the difference of most important HANA KPIs between two time frame selected. It is especially helpful to identify why HANA database behaviour suddenly changes. SAP Workload Report Show the KPI on SAP appliation servers. e.g. KPI History from ST03.","title":"2. Select Topic"},{"location":"#3-select-time-frame","text":"The next step is to select the Time Frame of the analysis. The time frame selection is the same for all reports except 'Comparison Report' and 'SAP Workload Report': General Report By default, the analysis is focusing on the last 24 hours. The HANA server time will be used automatically, therefore do not be surprised if the appearing time is not the same as the local time. Some shortcuts are provided in the interface so that it is easier to select the \"Start Time\" and \"End Time \" of the analysis. e.g. the combo box beside the Start Time label can be used to choose the baseline of the start time: Current time -> set the start time to the current HANA server time. End time -> set the start time to be the same as the End Time. Start of M_SERVICE_THREAD_SAMPLES -> set the start time to the beginning of M_SERVICE_THREAD_SAMPLES, when this is selected, the analysis will focus on the recent thread sample history that has a higher granularity. Most recent HANA startup time -> set the start time to the last HANA startup time. The \"+\" and \"-\" button together with the 'Hour'/'6 Hour' radio button can be used to quickly change the start/end time. The \"0\" button will set the time to zero, i.e. the midnight of the date. Comparison Report Both Time Frame 1 and Time Frame 2 need to be filled. If the time length of time frame 1 equals the length of time frame 2, the 'Analysis Time Range' label will be shown in green to imply that it is recommended to analyze with same time length for comparison report . SAP Workload Report Because the retention time is different on each system, therefore the time frame selection is ignored . The tool will fetch all the available data to generate the report.","title":"3. Select Time Frame"},{"location":"#4-start-analysis","text":"After the Topic and Timeframe are selected, click the \"Start Analysis\" button to launch the analysis. Depending on the workload of the system and the timeframe length selected, the analysis time may vary between less than one minute to more than 15 minutes. (Please have some patience : ) ) Finally \"Show Result\" button would open the report in your default browser. The report is a single HTML file located under the working directory with interactive embedded figures to show the HANA Database information. It is possible to zoom in/out and filter different KPIs for better understanding of the system status. Depending on the analysis choice, the report size ranges from a few MB to more than 20MB. Also note that it takes a while in the browser for the report to be fully rendered.","title":"4. Start Analysis"},{"location":"#5-log-file","text":"A log file with name hsgui.log or hscmd.log (depending on the version) is generated under the same directory where the tool is located. If error occurs, more information can be seen in the log file.","title":"5. Log File"},{"location":"#6-what-kind-of-authorization-is-required-to-use-the-tool","text":"The tool basically needs to access HANA monitoring views ( M_* ) and statistics server views ( _SYS_STATISTICS.HOST_* ). Therefore the HANA database user used in the tool need the privilege to access these views. i.e. the user should have the standard catalog role MONITORING granted.","title":"6. What kind of authorization is required to use the tool?"},{"location":"#options","text":"The option menu will show options for different topics: General Option Choose Output Folder: select the output folder where the generated report is saved Output Folder Naming Convention: the output folder can have 2 naming convention: Current Time: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00, where 2021/01/01 08:00 is the current timestamp when the report is generated. Analaysis Time Frame: e.g. PRD_PRD_GeneralReport_2021.01.01_08.00_2021.01.02_08.00, where 2021/01/01 08:00 - 2021/01/02 08:00 is the analysis time frame. Save Raw Data: if not ticked, no raw data (i.e. *.txt/csv) will be saved during report generation Tip Use 'Analysis Time Frame' as the output folder naming convention is helpful when multiple check is carried out on the same system with different time frames. General Report Options Include Parameter Check: if checked, any topic including HANA parameter check will be carried out, otherwise it will be skipped to save time. Top Issue: if checked, the General Report will include a summary section at the beginning to show automatically detected top issues on the HANA database. Complete Summary: if checked, the summary section will show information of one area even if no issue has been detected. Include Static Info: if checked, static information is included in the general report, e.g. largest tables on the system. In the future more static information that does not change often along time line will be included. Include Link to Raw Data: if checked, link to the raw data will be included above each figure. Select Sections: it is possible to choose which section would be included in the generated General Report. Comparison Report Options Select Sections: it is possible to choose which section would be included in the generated Comparison Report. When the tool is closed, the option will be saved as configuration file hs.<version>.ini and restored automatically next time it starts.","title":"Options"},{"location":"#how-to-read-the-generated-report","text":"","title":"How to read the generated report?"},{"location":"#general-functions","text":"Use the menu to jump to each section and sub-section (e.g. [CPU] -> \u2018Thread Workload\u2019) All the figures are interactive: Mouse drag on the center of the figure can zoom in; The \u2018house\u2019 icon can reset the scale. Mouse drag at the corner of the figure can zoom in along different axis. Mouse drag on the axis can pan the figure. Mouse hover on the traces will show additional important information. Click on legend graph can toggle that trace; Double click on legend graph can focus on that trace. Click on legend word can be used to select the content (e.g. copy SQL HASH). Click on 'camera' icon can download the figure as png file. There are 3 types of reports that can be generated, they are explained in detail below:","title":"General functions"},{"location":"#general-report","text":"General report consists of following sections and sub-sections: (One sample 'General Report' can be seen here )","title":"General Report"},{"location":"#summary","text":"Top Issues: most critical issues identified are shown in a table. The columns of the summary tables have the following meaning Area: area of the issue Priority: Very High / High / Medium / Info Description: describe the issue, if option \"Complete Summary\" is checked, then 'No issues Detected' will be shown here Host: on which host the issue occurs Time: The critical timestamp when the issue occurs Section: Link to the section Top SQL: shows top SQL statements with different critiria, hovering over the SQL Hash will show SQL text that can be copied to the clipboard Most Running Thread: shows the top 5 SQL with most threads in status 'Running', i.e. consuming CPU Most Thread Sample: shows the top 5 SQL with most thread samples Most Avg Memory Allocation: shows the top 5 SQL with most average memory allocation based on sql plan cache history Expensive SQL with Most Used Memory: shows the top 5 SQL with most used memory based on expensive SQL trace Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on sql plan cache history Expensive SQL with Most Elapsed Time: shows the top 5 SQL with most total elapsed time based on expensive SQL trace","title":"Summary"},{"location":"#general","text":"Host Configuration: shows the host type, host role, hardware model, etc HANA Revision History: shows the complete history of HANA revisions","title":"General"},{"location":"#parameter","text":"Check Result: if option \"Include Parameter Check\" is checked, the HANA parameter check result is shown. Change History: parameter change history is shown (available as of HANA 2.00.030) Info HANA parameter check is not yet available for HANA Cloud","title":"Parameter"},{"location":"#cpu","text":"CPU Configuration: CPU type, Number of CPU, etc are shown Detailed NUMA info is shown as of HANA 2.00.010 CPU vs. Threads: CPU load aggregated by MAX and AVG are shown. The time interval depends on the time range selected: Time range >= 6 hours: interval = 10 mins Time range < 6 hour: interval = 2 mins Thread Workload: Workload related parameters are shown. If workload class are defined, they will be shown. In the graph, 'session number' stands for the number of sessions connected to HANA, i.e. number of active work processes on SAP Application Servers SQL with Most Running Thread: SQL hash and text with thread state = 'Running' are shown. The data filter based on thread sample history depends on the time range selected, the below rule apply to all figures involving thread sample history: Time range <= 6 hours: interval = 2 mins; Others percent = 0: i.e. all thread sample will be shown 6 hours < Time range <= 2 days: interval = 10 mins; Others percent = 0.5: i.e. all threads that contribute to less than 0.5 percent in each time interval will be aggregated together into category '-- Others --' as shown in the figure Time range > 2 days: interval = 1 hour; Other percent = 1, similarly, individual portion less than 1 percent will be aggregated into category '-- Others -- ' SQL with Most Thread Sample: SQL hash and text with all threads, sometimes even if the thread state is not 'Running', there is still a chance that this thread is busy with CPU Application Source with Most Running Thread: Click on the center of the 'Sunburst' figure would focus only on that application source and show the distribution of SQL related to this source NUMA Load: shows the distribution of thread samples related to each NUMA load","title":"CPU"},{"location":"#memory","text":"Memory Configuration: memory configuration Memory and Unloads: memory consumption from HOST_RESOURCE_UTILIZATION_STATISTICS and HOST_LOAD_HISTORY_SERVICE Top Consumer by Component: memory consumption from HOST_SERVICE_COMPONENT_MEMORY Top Consumer by Area / Subarea / Objects: memory consumption from script HANA_Memory_TopConsumers, aggregated by different granularity Top Consumer of Heap Area: top consumer of Heap Areas, information from SAP Note 1999997 is shown below the figure to show detailed information of the top heap areas Service Memory: memory consumption from HOST_SERVICE_MEMORY Expensive SQL with Top Used Memory: SQL with most memory consumption from expensive SQL trace are shown. SQL with Top Avg Memory Allocation: SQL with most allocated memory from SQL plan cache is shown, note that these figures are the allocated memory, not the peak memory foot print. Use it as reference only and it is not reliable to decide SQL with most memory consumption in this figure","title":"Memory"},{"location":"#activity","text":"Important Activities: activities that last longer than 1 minute are shown: Indexserver down / Backup / Merge / Consistency Check / Savepoint Tables with High Merge Time: all table/partitions with merge running time longer than 1 minute are shown Savepoint Duration and Throughput: Savepoints that last longer than 1 minute are shown ConsistentChangeLock Holder - SQL Hash: if block time of any savepoint is longer than 10 sec, than the SQL that is holding the CCL is shown ConsistentChangeLock Holder - Thread State and Lock Name: similarly, if the lock holder of CCL is waiting for another lock, such lock information is shown","title":"Activity"},{"location":"#sql","text":"Sessions and SQL Executed per Second SQL Workload SQL Cache Overview: if the SQL cache is undersized, the figure will show the issue SQL Avg Request Time SQL with Top Elapsed Time: SQL with most total elapsed time is shown, the mouse hover information will also show the elapsed time per execution, elapsed time per row, etc. Expensive SQL with Top Elapsed Time: since the retention time of Expensive SQL trace depends on the system workload, it is normal that majority part of the history information is empty","title":"SQL"},{"location":"#thread-sample","text":"Thread State and Lock Name: information from SAP Note 1999998 is shown below the figure to show detailed information Thread Type and Thread Method: information from SAP Note 2114710 is shown below the figure to show detailed information SQL and Lock Name: top SQL and its waiting lock type is shown. If the lock type is '?', it means the SQL is likely to be busy on CPU SQL and Thread Method: top SQL and its thread method is shown. SQL and Passport Action: top SQL and the passport action is shown. Normally passport action shows meaningful application context of the SQL. SQL Hierarchy: the figure shows the SQL Hierarchy where SQL HASH is different from the Root HASH. Such graph will show e.g. which individual SQL triggered by a procedure call is dominant. DB User Application User Client Host Callstack History: shows the historical distribution of dominant call stacks (maximum depth = 17)","title":"Thread Sample"},{"location":"#space","text":"Volume, Backup and Memory Size Log Volume and Merge: the figure shows the hourly generated log size in comparison with the tables with most merged rows, these top tables are in general responsible for most of the log volumes Table with Largest Disk Size: the history information is recorded every 6 hours, so it is normal if the result is empty when the analysis time range is less than 6 hours. Both column table and row table are considered Column Table with Largest Memory Size: the result is aggregated by table Column Table with Most Rows: the result is aggregated by partition Column Table with Most Read Count Column Table with Most Write Count Row Table with Largest Memory Size Row Table with Largest Fragmented Size Row Table with Most Rows","title":"Space"},{"location":"#disk","text":"Disk Configuration: host, usage type, path, file system type, total size and used size are shown Disk Size: the history usage of disk size is sampled once per day DATA Volume Read DATA Volume Write LOG Volume Write Commit Frequency and Latency","title":"Disk"},{"location":"#backup","text":"Data Backup History: the backup status can be seen with mouse hover Log Backup History","title":"Backup"},{"location":"#garbage-collection","text":"Versions and Commit Range Garbage Collection Blocker History: the information shown is only for reference and might not be reliable","title":"Garbage Collection"},{"location":"#application-lock","text":"Transactions and Blocked Transactions Waiting SQL HASH: top SQL waiting for application lock Waiting Table: top tables on which SQL is waiting for application lock Lock Holder Application Source: top application source holding the lock Waiting SQL / Waiting Table / Lock Holder Status: shows the lock holder status that blocks the waiting SQL/Table, Status = 'ACTIVE' means the lock holder is busy with another SQL; Status = 'IDLE' means the lock holder is busy on the SAP side Waiting SQL / Waiting Table / Lock Holder SQL: if the lock holder status is 'ACTIVE', this figure shows these SQLs that is holding the lock Waiting SQL / Waiting Table / Lock Holder Source: shows the lock holder application source that holds the lock","title":"Application Lock"},{"location":"#system-replication","text":"HSR Configuration: shows the HANA System Replication configuration Log Shipping Throughput and Latency Log Shipping Delay and Backlog Log Replay Delay and Backlog Log Shipping Buffer","title":"System Replication"},{"location":"#trace","text":"Trace Configuration: shows trace settings that are explicitly activated or modified Trace Overview: shows the most important HANA Database traces generated within the analysis time frame Trace Content: shows the summary (in Pie and Sunburst format) and the detailed distribution of 'Component -> Source File -> Error Pattern' in HANA Database Traces","title":"Trace"},{"location":"#top-sql-report","text":"Top SQL report shows the top 10 most expensive SQL statements from different criteria. The report consists of following sections/sub-sections: (One sample 'Top SQL Report' can be seen here )","title":"Top SQL Report"},{"location":"#elapsed-time","text":"SQL Cache - Highest Total Elapsed Time: shows top 10 SQL statements with longest total elapsed time from SQL cache. If 'Y' is shown in the column 'Known', this SQL statement is documented in SAP Note 2000002 Expensive SQL - Highest Total Elapsed Time: shows the top 10 SQL statements with longest total elapsed time from 'Expensive SQL Trace'","title":"Elapsed Time"},{"location":"#cpu_1","text":"SQL with Most Thread Samples: shows top 10 SQL statements with most thread samples","title":"CPU"},{"location":"#memory_1","text":"Expensive SQL - Highest Memory Consumption: shows top 10 SQL statements with highest memory consumption from 'Expensive SQL Trace' SQL causing OOM: show all SQL statements causing OOM","title":"Memory"},{"location":"#sql-detail","text":"The detailed information of all the above most expensive SQL statements are shown in this section with following sub-sections: SQL Text If the SQL is already documentes, the related information from SAP Note 2000002 will be shown here SQL KPI History: shows the history KPI of the SQL statement including number of execution, rows per execution, average elapsed time per exeuction plan id, average elapsed time per row SQL Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on total elapsed time SQL Thread Sample History: shows the thread sample history aggregated by following combinations: Thread State and Lock Name Thread Type and Thread Method DB User and Application Name Application User and Application Source","title":"SQL Detail"},{"location":"#single-sql-report","text":"Single SQL report is designed to show detailed information of one particular SQL statement based on its statement hash. The report consists of following sections/sub-sections: (One sample 'Single SQL Report' can be seen here )","title":"Single SQL Report"},{"location":"#general-information","text":"SQL HASH and Text Bind Value: top 10 bind values in the expensive statement trace will be shown Execution Plan: execution plan with existing plan_id is shown, different plan levels are shown with different colors","title":"General Information"},{"location":"#kpi","text":"Summary: most important KPI of the SQL statement is shown SQL Cache History: average run time of different plan_id are shown with different colors SQL Cache History Heatmap: the figure shows the KPI distribution in terms of day of the week and hour of the day based on 4 different criteria: total elapsed time/total number of execution/ average time per execution/average row per execution Thread Workload: the figure shows the parallel degree history of the SQL statement Merge: table merge history is shown together with SQL average run time TSH (Thread State/Lock): thread sample history aggregated by thread state and lock name TSH (Thread Type/Method/Detail): thread sample history aggregated by thread type, thread method and thread detail TSH (DB User/App Name/Client IP): thread sample history aggregated by database user, application name and client IP TSH (App User/App Source): thread sample history aggregated by application user and application source Expensive SQL: KPI from expensive statement trace is shown SQL Hierarchy (as Parent): all child SQL with root statement hash equals the current SQL is shown, this figure helps to identify the dominant contributor if the SQL in question has child Application Lock (as Holder): the figure shows the lock waiter SQL / lock waiter table / lock waiter application source distribution that is blocked by the current SQL statement","title":"KPI"},{"location":"#objects","text":"Accessed Objects: the table shows all objects accessed by the SQL statement, click on the object name will jump to the detailed information of that object Object Hierarchy: if the SQL statement is accessing e.g. a procedure, the hierarchy of the accessed objects including sub procedures, functions, views, etc is shown. Different hierarchy levels are shown with different colors. Click on the object name will jump to the detailed information of the object View Definitions: all the normal view (i.e. excluding Calculation View, OLAP View, etc) definition is shown. Calculation View definition will be shown in a separate file Translation Table: if a join is performed, the translation table is shown Table Overview: first a table list with all involved tables are shown. click on the 'table name' will jump to the 'Table Detail' sub-section of the table click on the '#column' will jump to the 'Column Info' sub-section of the table click on the '#partition' or 'partition type' will jump to the 'Partition Definition' sub-section of the table click on the '#records' will jump to sub-section 'Table Size History (Row Number)' click on the '#index' will jump to the 'Index List' sub-section of the table click on the '#lob' will jump to the 'LOB Info' sub-section of the table click on the '#trigger' will jump to the 'Trigger Info' sub-section of the table click on the 'Total Memory Size(GB)' will jump to sub-section 'Table Size History (Memory)' click on the 'Disk Size(GB)' will jump to sub-section 'Table Size History (Disk)' click on the 'Last Merge Time' will jump to sub-section KPI -> 'Merge' click on ' - Table Detail' will jump to the table overview click on ' - Index List' or any other detailed info sub-section title will jump back to the 'Table Detail' sub-section Table Size History (Memory): table memory size history is shown together with the SQL average run time Table Size History (Row Number): table row size history is shown together with the SQL average run time Table Size History (Disk): table disk size history is shown together with the SQL average run time","title":"Objects"},{"location":"#optimization-helper","text":"SQL Text with Bind Value: SQL texts with bind variable replaced by bind value is shown Warning The SQL text with bind value is used for further troubleshooting. It does NOT mean that the SQL text with bind value is better than the original SQL with ? in terms of performance","title":"Optimization Helper"},{"location":"#comparison-report","text":"Comparison report (still in Beta mode) shows the KPI history from different timeframe in one figure so that it is easier to identify the KPI difference along timeline. It consists of following sections and sub-sections: (One sample 'Comparison Report' can be seen here )","title":"Comparison Report"},{"location":"#cpu_2","text":"CPU vs. Threads: in general all info from time frame 1 is shown in blue and all info from time frame 2 is shown in red Thread Workload SQL with Most Running Thread Overview: The bar with '+' pattern is from time frame 1, the same applies to all the overview figures in the comparison report SQL with Most Running Thread Detail SQL with Most Thread Sample Overview SQL with Most Thread Sample Detail","title":"CPU"},{"location":"#sql_1","text":"SQL Statements per Second SQL Avg Request Time SQL with Most Elapsed Time Overview SQL with Most Elapsed Time Detail","title":"SQL"},{"location":"#thread-sample_1","text":"Thread State and Lock Name Overview Thread State and Lock Name Detail Thread Type and Thread Method Overview Thread Type and Thread Method Detail SQL and Lock Name Overview SQL and Lock Name Detail SQL and Thread Method Overview SQL and Thread Method Detail","title":"Thread Sample"},{"location":"#disk_1","text":"DATA Volume Read","title":"Disk"},{"location":"#sap-workload-report","text":"SAP Workload report (still in Beta mode) shows the KPI history from SAP application servers. Such report can only be generated with SAPGUI connection. It consists of following sections and sub-sections: (One sample 'SAP Workload Report' can be seen here )","title":"SAP Workload Report"},{"location":"#st03","text":"Work Process Type History - Steps: shows the daily history of total work process steps aggregate by type Work Process Type History - Total Time: shows the daily history of total response time aggregate by work process type Daily History - All: shows the daily history of average response time of all work process types Daily History - Dialog: shows the daily history of average response time of Dialog work process Daily History - Background: shows the daily history of average response time of Background work process Daily History - RFC: shows the daily history of average response time of RFC Hourly History - All: shows the Hourly history of average response time of all work process types Info Note that on old Netwearver systems the data in night hours (00-06 and 21--24) are aggregated so that the values shown are not accurate. Customer should apply Note 910897 so that the data in each hour is captured separately. Hourly History - Dialog: shows the Hourly history of average response time of Dialog work process Hourly History - Background: shows the Hourly history of average response time of Background work process Hourly History - RFC: shows the Hourly history of average response time of RFC","title":"ST03"},{"location":"#feedback","text":"Author: ZHONG, Mingqian (Tim) (Please contact me via mingqian.zhong@sap.com ) / Sponsor: Ramu Vidadala","title":"Feedback?"},{"location":"changelog/","text":"Future: V2.2 \u00b6 + [SAP Workload Report] added to show SAP workload KPI history, it only works with SAPGUI connection. It also supports non-HANA DB systems. # [General Report] 'App Lock' -> 'Waiting SQL / Waiting Table / Lock Holder SQL' shows the lock holder SQL text instead of the waiting SQL text when hovering the mouse + Report run time and size are shown in the user interface and the log files + The analysis can be terminated if click on the 'Disconnect' button - bug fix: GAL is not correctly calculated if license memory is smaller than physical memory 2021/12/23: V2.1 \u00b6 + [Comparison Report] added to show difference of HANA KPI between 2 time frames + Splash window added # [General Report] The summary is reworked: Top SQL statements are listed separately + [General Report] 'CPU' -> 'CPU vs. Threads' shows also the \"CPU All\" KPI which is the sum of user CPU and system CPU + [General Report] 'Space' -> 'Column Table with Most Read/Write Count' is added to show top column tables with most read and write operations + [General Report] 'Thread Sample' -> 'SQL and Passport Action' is added to show passport action information - bug fix: GAL is not correctly calculated on MDC system with more than 1 tenants - bug fix: \"Table with Largest Disk Size\" -> disk size is wrong for partitioned tables 2021/09/01: V2.0 \u00b6 + HANA Cloud is supported + New report outlook style + 'General Option' is added in the menu 'Option', it is now possible to choose the default output folder of the report and also the folder naming convention can be configured + [General Report] 'Thread Sample' -> 'Callstack History' added to show the history distribution of the dominant 'Callstack' + [General Report] 'System Replication' -> 'Log Shipping Buffer' added to show if log shipping buffer is full for async HSR + [General Report] 'Trace' section is added to show HANA Database traces information + [General Report] 'General' section is added to include 'Host Configuration' and 'HANA Revision History' information + [Single SQL Report] 'Object' section now also include the Calculation View definition in JSON format 2021/03/29: V1.9 \u00b6 + [Single SQL Report] is added to show detailed information of one particular SQL statement, see here for detailed information # [General Report] 'Thread Sample' is redesigned to limit the '-- Others --' portion so that the output shows more meaningful information # [General Report] 'Thread Sample' -> 'Client IP' is changed to 'Client Host' so that the client host name instead of the client ip is shown + [General Report] 'Space' -> 'Row Table with Most Rows'/'Row Table with Largest Memory Size'/'Row Table with Largest Fragmented Size' are added 2021/03/02: V1.8 \u00b6 + After connect to HANA database, basic HANA configuration such as Scale-out, HSR, Timezone will be displayed + [General Report] 'Space' -> 'Data Page' added to show the history of shadow page size + [General Report] 'CPU' -> 'CPU vs. Threads' now shows the KPI aggregated by AVG and MAX separately + [General Report] Section 'SQL' -> 'SQL with Top Elapsed Time': shows also the key KPI of the SQL statement such as elapsed time per execution, elapsed time per row, etc. + [General Report] Section 'Space' -> 'Log Volume and Merge' added to show which tables are mainly responsible for high merged rows and log volume generated, i.e. high DML executed on these tables + [General Report] In section 'CPU' -> 'Application Source with Most Running Thread': Sunburst figure is added to show the distribution of SQL statements triggered by each application source + [General Report] Pie and sunburst figures are added to figures under 'Memory' section to show the summary of memory consumption + [General Report] Option -> General Report Option -> 'Complete Summary' added. If this option is checked: the summary will contain information of one area even if no issue is detected + [General Report] Option -> General Report Option -> 'Include Link to Raw Data' added. If this option is checked: link to the raw data will be included above each figure + [General Report] In section 'CPU' -> 'Thread Workload', if workload class is configured, the information will be shown - bug fix: R/3 connection not working well when using Belize Theme 2021/01/20: V1.7 \u00b6 # Option menu is completely reworked: - \"R/3 Style Output\" is removed, in the future both csv and R/3 style output are always provided # \"Top Issue\" is officially released , most critical issues will be listed at the beginning of the general report to highlight the HotSpots on the system + \"General Report Option\" -> \"Include Static Info\" added, see manual above for detailed information + \"General Report Option\" -> \"Select Sections\" added, see manual above for detailed information The option will be saved as config file hh.ini so that its status will be remembered + SSL connection supported : checkbox 'SSL' is added in the GUI version and option '-ssl' is added in hscmd # Time selection is reworked, combo box for start and end time are added with 2 extra options: Since start of M_SERVICE_THREAD_SAMPLES: this is to focus on the most recent history, normally within the last 2 hours and the result will show with higher granularity of 10 seconds per sample Since last startup: set the begin time to the most recent HANA startup time + [General Report] Persistent memory is considered in section \"Memory->Top consumer\" and section \"Space->Table with largest memory size\" + [General Report] 'Thread Sample' -> 'SQL Hierarchy' added to show the relationship between SQL HASH and Root HASH, especially when Procedure/AMDP is used, it is helpful to find which SQL is responsible for most of the run time # [General Report] Time duration in various place has been changed from seconds to human friendly format, e.g. 3800 sec is now shown as '1 hour 3 minute 20 second' # [General Report] 'Space' -> 'Table with Most Rows' also shows 1.5 billion / 2 billion threshold # 'GeneralCheck' is renamed to 'General Report'; 'SQLCheck' is renamed to 'Top SQL Report' 2020/11/30: V1.6 \u00b6 + [General Report] Combination of waiting SQL/table/lock holder sql and lock holder status has been added, this can be used to identify locking caused by parallel DML + Mouse cursor will change into hourglass after analysis is started + [General Report] SQL Cache overview history added # Default output has been changed to: .\\Report\\<DBID>_\\<SID>_\\<Topic>_\\<Date>_\\<Time>\\HANAHotSpots_\\<DBID>_\\<SID>_\\<Topic>_\\<StartTime>_\\<EndTime>.html + [General Report] SQL with most running threads and most threads added + [General Report] Thread sample history aggregated by SQL/lock name and SQL/Thread method added + [General Report] Active/Waiting thread number added to thread sample history figures # [General Report] Pie charts are showing the category text instead of the value, the size is increased for better reading + [General Report] 'CPU' -> 'Thread workload' added + [General Report] Host type and role added (i.e. Primary/Secondary for HSR and Master/Slave for scale-out) # [General Report] \"Top issue\" improved: issues are listed according to topic and priority. Top SQLs are also listed if they have big impact to the system. - bug fix: GC blocker history is showing wrong timestamp 2020/10/15: V1.5 \u00b6 # [General Report] The report structure is completely reorganized. Results are now presented according to topics. Such change simplifies future enhancement of extra check results + [General Report] SQL texts are now included in all figures related to SQLs . When hovering the mouse on the graph, SQL text will be shown. Due to the screen size limitation, if the SQL text is too long, only part of it is shown The complete SQL text is saved in file \"SQL Texts.txt\" # [General Report] For memory and table size history, 2 buttons are added so that the figure can be toggled between stacked and non-stacked format. The non-stacked format is better to spot sudden change of the KPI + [General Report] General configuration of CPU, memory, hardware, disk, HSR added + [General Report] CPU NUMA Load history added + [General Report] If wait for lock time is high during save point, the ConsistentChangeLock holder history is shown + [General Report] SQL causing OOM added + [General Report] Memory component history added + [General Report] Thread sample history aggregated by db user, app user and client ip added + [General Report] Table with largest disk size history added + [General Report] Disk size and general information added + [General Report] Backup history added + [General Report] Garbage collection blocker history added # If the tool crashed, the detailed error is logged for troubleshooting - bug fix: various bugs that cause the tool to crash 2020/09/15: V1.4 \u00b6 + SAPGUI connection is supported , please read the instruction in the manual above # HANA server time is taken into account, e.g. when \"last 24 hours\" is chosen for the analysis time frame, the end time will be set to the current timestamp on the HANA server rather than the local timestamp of the laptop where the tool is started + [General Report] Data volume added to I/O KPIs + [General Report] Combination of waiting SQL/table/lock holder application source has been added. SQL text is also shown when hovering the mouse on the figure - bug fix: [Top SQL Report] Top sql is duplicated in scale out system - bug fix: Note link in the generated report replaced from relative link to absolute link 2020/07/18: V1.3 \u00b6 + hscmd (HANA HotSpots CMD) command line version released with V1.3 + hdbuserstore key is supported to connect + SSO is supported to connect + [General Report] Parameter change history + [General Report] Network intrahost receive latency + [General Report] Memory service history + [General Report] Commit IO history + [Top SQL Report] plan_id added in the SQL KPI History, so it is easier to see the plan change impact on the SQL performance - bug fix: Crash when application lock history is empty - bug fix: Crash when load history is empty 2020/06/23: V1.2 \u00b6 + Menu \"Option\" + Automatically identify most crtical issues and provided in the \"Summary\" section + Topic \"MiniCheck\" + Parameter check + Annotation of good value added to I/O figures 2020/05/15: V1.1 \u00b6 Information regarding top heap area is shown in GeneralCheck Report (info read from Note 1999997) Information regarding top thread state / lock is shown in GeneralCheck Report (info read from Note 1999998) Information regarding top thread type / method is shown in GeneralCheck Report (info read from Note 2114710) 2020/05/12: V1.0 \u00b6 First version released","title":"Change Log"},{"location":"changelog/#future-v22","text":"+ [SAP Workload Report] added to show SAP workload KPI history, it only works with SAPGUI connection. It also supports non-HANA DB systems. # [General Report] 'App Lock' -> 'Waiting SQL / Waiting Table / Lock Holder SQL' shows the lock holder SQL text instead of the waiting SQL text when hovering the mouse + Report run time and size are shown in the user interface and the log files + The analysis can be terminated if click on the 'Disconnect' button - bug fix: GAL is not correctly calculated if license memory is smaller than physical memory","title":"Future: V2.2"},{"location":"changelog/#20211223-v21","text":"+ [Comparison Report] added to show difference of HANA KPI between 2 time frames + Splash window added # [General Report] The summary is reworked: Top SQL statements are listed separately + [General Report] 'CPU' -> 'CPU vs. Threads' shows also the \"CPU All\" KPI which is the sum of user CPU and system CPU + [General Report] 'Space' -> 'Column Table with Most Read/Write Count' is added to show top column tables with most read and write operations + [General Report] 'Thread Sample' -> 'SQL and Passport Action' is added to show passport action information - bug fix: GAL is not correctly calculated on MDC system with more than 1 tenants - bug fix: \"Table with Largest Disk Size\" -> disk size is wrong for partitioned tables","title":"2021/12/23: V2.1"},{"location":"changelog/#20210901-v20","text":"+ HANA Cloud is supported + New report outlook style + 'General Option' is added in the menu 'Option', it is now possible to choose the default output folder of the report and also the folder naming convention can be configured + [General Report] 'Thread Sample' -> 'Callstack History' added to show the history distribution of the dominant 'Callstack' + [General Report] 'System Replication' -> 'Log Shipping Buffer' added to show if log shipping buffer is full for async HSR + [General Report] 'Trace' section is added to show HANA Database traces information + [General Report] 'General' section is added to include 'Host Configuration' and 'HANA Revision History' information + [Single SQL Report] 'Object' section now also include the Calculation View definition in JSON format","title":"2021/09/01: V2.0"},{"location":"changelog/#20210329-v19","text":"+ [Single SQL Report] is added to show detailed information of one particular SQL statement, see here for detailed information # [General Report] 'Thread Sample' is redesigned to limit the '-- Others --' portion so that the output shows more meaningful information # [General Report] 'Thread Sample' -> 'Client IP' is changed to 'Client Host' so that the client host name instead of the client ip is shown + [General Report] 'Space' -> 'Row Table with Most Rows'/'Row Table with Largest Memory Size'/'Row Table with Largest Fragmented Size' are added","title":"2021/03/29: V1.9"},{"location":"changelog/#20210302-v18","text":"+ After connect to HANA database, basic HANA configuration such as Scale-out, HSR, Timezone will be displayed + [General Report] 'Space' -> 'Data Page' added to show the history of shadow page size + [General Report] 'CPU' -> 'CPU vs. Threads' now shows the KPI aggregated by AVG and MAX separately + [General Report] Section 'SQL' -> 'SQL with Top Elapsed Time': shows also the key KPI of the SQL statement such as elapsed time per execution, elapsed time per row, etc. + [General Report] Section 'Space' -> 'Log Volume and Merge' added to show which tables are mainly responsible for high merged rows and log volume generated, i.e. high DML executed on these tables + [General Report] In section 'CPU' -> 'Application Source with Most Running Thread': Sunburst figure is added to show the distribution of SQL statements triggered by each application source + [General Report] Pie and sunburst figures are added to figures under 'Memory' section to show the summary of memory consumption + [General Report] Option -> General Report Option -> 'Complete Summary' added. If this option is checked: the summary will contain information of one area even if no issue is detected + [General Report] Option -> General Report Option -> 'Include Link to Raw Data' added. If this option is checked: link to the raw data will be included above each figure + [General Report] In section 'CPU' -> 'Thread Workload', if workload class is configured, the information will be shown - bug fix: R/3 connection not working well when using Belize Theme","title":"2021/03/02: V1.8"},{"location":"changelog/#20210120-v17","text":"# Option menu is completely reworked: - \"R/3 Style Output\" is removed, in the future both csv and R/3 style output are always provided # \"Top Issue\" is officially released , most critical issues will be listed at the beginning of the general report to highlight the HotSpots on the system + \"General Report Option\" -> \"Include Static Info\" added, see manual above for detailed information + \"General Report Option\" -> \"Select Sections\" added, see manual above for detailed information The option will be saved as config file hh.ini so that its status will be remembered + SSL connection supported : checkbox 'SSL' is added in the GUI version and option '-ssl' is added in hscmd # Time selection is reworked, combo box for start and end time are added with 2 extra options: Since start of M_SERVICE_THREAD_SAMPLES: this is to focus on the most recent history, normally within the last 2 hours and the result will show with higher granularity of 10 seconds per sample Since last startup: set the begin time to the most recent HANA startup time + [General Report] Persistent memory is considered in section \"Memory->Top consumer\" and section \"Space->Table with largest memory size\" + [General Report] 'Thread Sample' -> 'SQL Hierarchy' added to show the relationship between SQL HASH and Root HASH, especially when Procedure/AMDP is used, it is helpful to find which SQL is responsible for most of the run time # [General Report] Time duration in various place has been changed from seconds to human friendly format, e.g. 3800 sec is now shown as '1 hour 3 minute 20 second' # [General Report] 'Space' -> 'Table with Most Rows' also shows 1.5 billion / 2 billion threshold # 'GeneralCheck' is renamed to 'General Report'; 'SQLCheck' is renamed to 'Top SQL Report'","title":"2021/01/20: V1.7"},{"location":"changelog/#20201130-v16","text":"+ [General Report] Combination of waiting SQL/table/lock holder sql and lock holder status has been added, this can be used to identify locking caused by parallel DML + Mouse cursor will change into hourglass after analysis is started + [General Report] SQL Cache overview history added # Default output has been changed to: .\\Report\\<DBID>_\\<SID>_\\<Topic>_\\<Date>_\\<Time>\\HANAHotSpots_\\<DBID>_\\<SID>_\\<Topic>_\\<StartTime>_\\<EndTime>.html + [General Report] SQL with most running threads and most threads added + [General Report] Thread sample history aggregated by SQL/lock name and SQL/Thread method added + [General Report] Active/Waiting thread number added to thread sample history figures # [General Report] Pie charts are showing the category text instead of the value, the size is increased for better reading + [General Report] 'CPU' -> 'Thread workload' added + [General Report] Host type and role added (i.e. Primary/Secondary for HSR and Master/Slave for scale-out) # [General Report] \"Top issue\" improved: issues are listed according to topic and priority. Top SQLs are also listed if they have big impact to the system. - bug fix: GC blocker history is showing wrong timestamp","title":"2020/11/30: V1.6"},{"location":"changelog/#20201015-v15","text":"# [General Report] The report structure is completely reorganized. Results are now presented according to topics. Such change simplifies future enhancement of extra check results + [General Report] SQL texts are now included in all figures related to SQLs . When hovering the mouse on the graph, SQL text will be shown. Due to the screen size limitation, if the SQL text is too long, only part of it is shown The complete SQL text is saved in file \"SQL Texts.txt\" # [General Report] For memory and table size history, 2 buttons are added so that the figure can be toggled between stacked and non-stacked format. The non-stacked format is better to spot sudden change of the KPI + [General Report] General configuration of CPU, memory, hardware, disk, HSR added + [General Report] CPU NUMA Load history added + [General Report] If wait for lock time is high during save point, the ConsistentChangeLock holder history is shown + [General Report] SQL causing OOM added + [General Report] Memory component history added + [General Report] Thread sample history aggregated by db user, app user and client ip added + [General Report] Table with largest disk size history added + [General Report] Disk size and general information added + [General Report] Backup history added + [General Report] Garbage collection blocker history added # If the tool crashed, the detailed error is logged for troubleshooting - bug fix: various bugs that cause the tool to crash","title":"2020/10/15: V1.5"},{"location":"changelog/#20200915-v14","text":"+ SAPGUI connection is supported , please read the instruction in the manual above # HANA server time is taken into account, e.g. when \"last 24 hours\" is chosen for the analysis time frame, the end time will be set to the current timestamp on the HANA server rather than the local timestamp of the laptop where the tool is started + [General Report] Data volume added to I/O KPIs + [General Report] Combination of waiting SQL/table/lock holder application source has been added. SQL text is also shown when hovering the mouse on the figure - bug fix: [Top SQL Report] Top sql is duplicated in scale out system - bug fix: Note link in the generated report replaced from relative link to absolute link","title":"2020/09/15: V1.4"},{"location":"changelog/#20200718-v13","text":"+ hscmd (HANA HotSpots CMD) command line version released with V1.3 + hdbuserstore key is supported to connect + SSO is supported to connect + [General Report] Parameter change history + [General Report] Network intrahost receive latency + [General Report] Memory service history + [General Report] Commit IO history + [Top SQL Report] plan_id added in the SQL KPI History, so it is easier to see the plan change impact on the SQL performance - bug fix: Crash when application lock history is empty - bug fix: Crash when load history is empty","title":"2020/07/18: V1.3"},{"location":"changelog/#20200623-v12","text":"+ Menu \"Option\" + Automatically identify most crtical issues and provided in the \"Summary\" section + Topic \"MiniCheck\" + Parameter check + Annotation of good value added to I/O figures","title":"2020/06/23: V1.2"},{"location":"changelog/#20200515-v11","text":"Information regarding top heap area is shown in GeneralCheck Report (info read from Note 1999997) Information regarding top thread state / lock is shown in GeneralCheck Report (info read from Note 1999998) Information regarding top thread type / method is shown in GeneralCheck Report (info read from Note 2114710)","title":"2020/05/15: V1.1"},{"location":"changelog/#20200512-v10","text":"First version released","title":"2020/05/12: V1.0"},{"location":"download/","text":"Click here to download","title":"Download"},{"location":"links/","text":"Note 2927209: FAQ: SAP HANA HotSpots JAM Page","title":"Links"}]}